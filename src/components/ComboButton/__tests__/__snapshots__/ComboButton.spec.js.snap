// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ComboButton renders a combo button with children and an overflow menu 1`] = `
<ComboButton
  className=""
  direction="top"
>
  <div
    className="security--combo-button"
    data-floating-menu-container={true}
  >
    <Button
      className="security--combo-button--primary"
      disabled={false}
      iconDescription=""
      kind="primary"
      largeText={null}
      loading={false}
      onClick={[Function]}
      renderIcon={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      tabIndex={0}
      type="button"
    >
      <ForwardRef(Button)
        className="security--button security--combo-button--primary"
        disabled={false}
        iconDescription=""
        kind="primary"
        onClick={[Function]}
        renderIcon={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        tabIndex={0}
        type="button"
      >
        <button
          className="security--button security--combo-button--primary bx--btn bx--btn--primary"
          disabled={false}
          onClick={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="bx--text-truncate--end"
            title="Start a task"
          >
            Start a task
          </span>
          <ForwardRef(ArrowRight20)
            aria-hidden="true"
            aria-label=""
            className="bx--btn__icon"
          >
            <Icon
              aria-hidden="true"
              aria-label=""
              className="bx--btn__icon"
              height={20}
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 20 20"
              width={20}
              xmlns="http://www.w3.org/2000/svg"
            >
              <svg
                aria-hidden={true}
                aria-label=""
                className="bx--btn__icon"
                focusable="false"
                height={20}
                preserveAspectRatio="xMidYMid meet"
                style={
                  Object {
                    "willChange": "transform",
                  }
                }
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M11.8 2.8l-1 1 5.4 5.5H1v1.4h15.2l-5.4 5.5 1 1L19 10z"
                />
              </svg>
            </Icon>
          </ForwardRef(ArrowRight20)>
        </button>
      </ForwardRef(Button)>
    </Button>
    <ForwardRef(OverflowMenu)
      className="security--button bx--btn bx--btn--primary security--combo-button__button security--combo-button__overflow-menu"
      direction="top"
      menuOffset={[Function]}
      menuOptionsClass="bx--list-box__menu"
      onClose={[Function]}
      onOpen={[Function]}
      renderIcon={[Function]}
    >
      <OverflowMenu
        ariaLabel="Menu"
        className="security--button bx--btn bx--btn--primary security--combo-button__button security--combo-button__overflow-menu"
        direction="top"
        flipped={false}
        iconDescription="open and close list of options"
        innerRef={null}
        menuOffset={[Function]}
        menuOffsetFlip={[Function]}
        menuOptionsClass="bx--list-box__menu"
        onClick={[Function]}
        onClose={[Function]}
        onKeyDown={[Function]}
        onOpen={[Function]}
        open={false}
        renderIcon={[Function]}
        tabIndex={0}
      >
        <ClickListener
          onClickOutside={[Function]}
        >
          <div
            aria-expanded={false}
            aria-haspopup={true}
            aria-label="Menu"
            className="security--button bx--btn bx--btn--primary security--combo-button__button security--combo-button__overflow-menu bx--overflow-menu"
            onClick={[Function]}
            onClose={[Function]}
            onKeyDown={[Function]}
            open={false}
            role="button"
            tabIndex={0}
          >
            <renderIcon
              aria-label="open and close list of options"
              className="bx--overflow-menu__icon"
              focusable="false"
              onClick={[Function]}
              onKeyDown={[Function]}
            >
              <ForwardRef(ChevronDown16)
                className="security--combo-button__icon"
              >
                <Icon
                  className="security--combo-button__icon"
                  height={16}
                  preserveAspectRatio="xMidYMid meet"
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <svg
                    aria-hidden={true}
                    className="security--combo-button__icon"
                    focusable="false"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    style={
                      Object {
                        "willChange": "transform",
                      }
                    }
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M8 11L3 6l.7-.7L8 9.6l4.3-4.3.7.7z"
                    />
                  </svg>
                </Icon>
              </ForwardRef(ChevronDown16)>
            </renderIcon>
          </div>
        </ClickListener>
      </OverflowMenu>
    </ForwardRef(OverflowMenu)>
  </div>
</ComboButton>
`;

exports[`ComboButton renders a combo button without an overflow menu 1`] = `
<ComboButton
  className=""
  direction="top"
>
  <div
    className="security--combo-button"
    data-floating-menu-container={true}
  >
    <Button
      className="security--combo-button--primary"
      disabled={false}
      iconDescription=""
      kind="primary"
      largeText={null}
      loading={false}
      onClick={[Function]}
      renderIcon={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      tabIndex={0}
      type="button"
    >
      <ForwardRef(Button)
        className="security--button security--combo-button--primary"
        disabled={false}
        iconDescription=""
        kind="primary"
        onClick={[Function]}
        renderIcon={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        tabIndex={0}
        type="button"
      >
        <button
          className="security--button security--combo-button--primary bx--btn bx--btn--primary"
          disabled={false}
          onClick={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="bx--text-truncate--end"
            title="Start a task"
          >
            Start a task
          </span>
          <ForwardRef(ArrowRight20)
            aria-hidden="true"
            aria-label=""
            className="bx--btn__icon"
          >
            <Icon
              aria-hidden="true"
              aria-label=""
              className="bx--btn__icon"
              height={20}
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 20 20"
              width={20}
              xmlns="http://www.w3.org/2000/svg"
            >
              <svg
                aria-hidden={true}
                aria-label=""
                className="bx--btn__icon"
                focusable="false"
                height={20}
                preserveAspectRatio="xMidYMid meet"
                style={
                  Object {
                    "willChange": "transform",
                  }
                }
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M11.8 2.8l-1 1 5.4 5.5H1v1.4h15.2l-5.4 5.5 1 1L19 10z"
                />
              </svg>
            </Icon>
          </ForwardRef(ArrowRight20)>
        </button>
      </ForwardRef(Button)>
    </Button>
  </div>
</ComboButton>
`;
