// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Panel renders 1`] = `
<Panel
  className={null}
  closeButton={[Function]}
  focusTrap={true}
  isOpen={true}
  labels={Object {}}
  renderFooter={[Function]}
  stopPropagation={false}
  subtitle="Label"
  title="Label"
>
  <Transition
    className="security--panel"
    component={[Function]}
    timeout={160}
  >
    <CSSTransitionGroup
      className="security--transition"
      component={[Function]}
      transitionAppear={true}
      transitionAppearTimeout={160}
      transitionEnter={true}
      transitionEnterTimeout={160}
      transitionLeave={true}
      transitionLeaveTimeout={160}
      transitionName={
        Object {
          "appear": "security--panel__transition--appear",
          "appearActive": "security--panel__transition--appear--active",
          "enter": "security--panel__transition--enter",
          "enterActive": "security--panel__transition--enter--active",
          "leave": "security--panel__transition--leave",
          "leaveActive": "security--panel__transition--leave--active",
        }
      }
    >
      <TransitionGroup
        childFactory={[Function]}
        className="security--transition"
        component={[Function]}
        transitionAppear={true}
        transitionAppearTimeout={160}
        transitionEnter={true}
        transitionEnterTimeout={160}
        transitionLeave={true}
        transitionLeaveTimeout={160}
        transitionName={
          Object {
            "appear": "security--panel__transition--appear",
            "appearActive": "security--panel__transition--appear--active",
            "enter": "security--panel__transition--enter",
            "enterActive": "security--panel__transition--enter--active",
            "leave": "security--panel__transition--leave",
            "leaveActive": "security--panel__transition--leave--active",
          }
        }
      >
        <component
          className="security--transition"
        >
          <CSSTransitionGroupChild
            appear={true}
            appearTimeout={160}
            enter={true}
            enterTimeout={160}
            key=".$.0"
            leave={true}
            leaveTimeout={160}
            name={
              Object {
                "appear": "security--panel__transition--appear",
                "appearActive": "security--panel__transition--appear--active",
                "enter": "security--panel__transition--enter",
                "enterActive": "security--panel__transition--enter--active",
                "leave": "security--panel__transition--leave",
                "leaveActive": "security--panel__transition--leave--active",
              }
            }
          >
            <Portal
              focusTrap={true}
              hasOverlay={true}
              initialFocus={null}
              key=".0"
              rootNode={
                <body
                  class="security--portal__container"
                >
                  <section
                    class="security--panel security--panel__transition--appear"
                  >
                    <header
                      class="security--panel__header"
                    >
                      <div
                        class="security--panel__header__container--title"
                      >
                        <h2
                          class="security--panel__header--title"
                        >
                          Label
                        </h2>
                        <div
                          class="security--panel__header--subtitle"
                        >
                          Label
                        </div>
                      </div>
                      <button
                        aria-label="Close"
                        class="security--button--icon security--panel__button--close"
                      >
                        <svg
                          aria-hidden="true"
                          class="security--icon"
                          focusable="false"
                          height="20"
                          preserveAspectRatio="xMidYMid meet"
                          style="will-change: transform;"
                          viewBox="0 0 32 32"
                          width="20"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z"
                          />
                        </svg>
                      </button>
                    </header>
                    <section
                      class="security--panel__body security--panel__body--footer"
                      style="margin-top: 0px; margin-bottom: 0px;"
                    >
                      <div
                        class="security--panel__body--content"
                        role="tabpanel"
                        tabindex="0"
                      >
                        Label
                      </div>
                    </section>
                    <footer
                      class="security--panel__footer"
                    >
                      <button
                        class="security--button bx--btn bx--btn--secondary"
                        tabindex="0"
                        type="button"
                      >
                        Close
                      </button>
                      <button
                        class="security--button bx--btn bx--btn--primary"
                        tabindex="0"
                        type="button"
                      >
                        Add
                      </button>
                    </footer>
                  </section>
                  <div
                    class="security--portal__overlay"
                    tabindex="-1"
                  />
                </body>
              }
              stopPropagation={false}
            >
              <Portal
                containerInfo={
                  <body
                    class="security--portal__container"
                  >
                    <section
                      class="security--panel security--panel__transition--appear"
                    >
                      <header
                        class="security--panel__header"
                      >
                        <div
                          class="security--panel__header__container--title"
                        >
                          <h2
                            class="security--panel__header--title"
                          >
                            Label
                          </h2>
                          <div
                            class="security--panel__header--subtitle"
                          >
                            Label
                          </div>
                        </div>
                        <button
                          aria-label="Close"
                          class="security--button--icon security--panel__button--close"
                        >
                          <svg
                            aria-hidden="true"
                            class="security--icon"
                            focusable="false"
                            height="20"
                            preserveAspectRatio="xMidYMid meet"
                            style="will-change: transform;"
                            viewBox="0 0 32 32"
                            width="20"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z"
                            />
                          </svg>
                        </button>
                      </header>
                      <section
                        class="security--panel__body security--panel__body--footer"
                        style="margin-top: 0px; margin-bottom: 0px;"
                      >
                        <div
                          class="security--panel__body--content"
                          role="tabpanel"
                          tabindex="0"
                        >
                          Label
                        </div>
                      </section>
                      <footer
                        class="security--panel__footer"
                      >
                        <button
                          class="security--button bx--btn bx--btn--secondary"
                          tabindex="0"
                          type="button"
                        >
                          Close
                        </button>
                        <button
                          class="security--button bx--btn bx--btn--primary"
                          tabindex="0"
                          type="button"
                        >
                          Add
                        </button>
                      </footer>
                    </section>
                    <div
                      class="security--portal__overlay"
                      tabindex="-1"
                    />
                  </body>
                }
              >
                <FocusTrap
                  _createFocusTrap={[Function]}
                  active={true}
                  focusTrapOptions={
                    Object {
                      "initialFocus": null,
                    }
                  }
                  paused={false}
                >
                  <section
                    className="security--panel"
                  >
                    <header
                      className="security--panel__header"
                    >
                      <div
                        className="security--panel__header__container--title"
                      >
                        <h2
                          className="security--panel__header--title"
                        >
                          Label
                        </h2>
                        <div
                          className="security--panel__header--subtitle"
                        >
                          Label
                        </div>
                      </div>
                      <IconButton
                        className="security--panel__button--close"
                        iconClassName=""
                        iconSize={20}
                        label="Close"
                        onClick={null}
                        path={null}
                        renderIcon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        size={null}
                        state={false}
                        tooltip={false}
                        tooltipDirection="bottom"
                      >
                        <button
                          aria-label="Close"
                          className="security--button--icon security--panel__button--close"
                          onClick={null}
                        >
                          <Icon
                            className=""
                            path={null}
                            renderIcon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              }
                            }
                            size={20}
                            viewBox="0 0 32 32"
                          >
                            <ForwardRef(Close20)
                              aria-hidden="true"
                              className="security--icon"
                              focusable={false}
                              preserveAspectRatio="xMidYMid meet"
                              style={
                                Object {
                                  "willChange": "transform",
                                }
                              }
                            >
                              <Icon
                                aria-hidden="true"
                                className="security--icon"
                                focusable={false}
                                height={20}
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "willChange": "transform",
                                  }
                                }
                                viewBox="0 0 32 32"
                                width={20}
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="security--icon"
                                  focusable={false}
                                  height={20}
                                  preserveAspectRatio="xMidYMid meet"
                                  style={
                                    Object {
                                      "willChange": "transform",
                                    }
                                  }
                                  viewBox="0 0 32 32"
                                  width={20}
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z"
                                  />
                                </svg>
                              </Icon>
                            </ForwardRef(Close20)>
                          </Icon>
                        </button>
                      </IconButton>
                    </header>
                    <section
                      className="security--panel__body security--panel__body--footer"
                      style={
                        Object {
                          "marginBottom": "0px",
                          "marginTop": "0px",
                        }
                      }
                    >
                      <PanelContent>
                        <div
                          className="security--panel__body--content"
                          role="tabpanel"
                          tabIndex="0"
                        >
                          Label
                        </div>
                      </PanelContent>
                    </section>
                    <footer
                      className="security--panel__footer"
                    >
                      <Button
                        disabled={false}
                        kind="secondary"
                        loading={false}
                        onClick={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <ForwardRef(Button)
                          className="security--button"
                          disabled={false}
                          kind="secondary"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <button
                            className="security--button bx--btn bx--btn--secondary"
                            disabled={false}
                            onClick={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            Close
                          </button>
                        </ForwardRef(Button)>
                      </Button>
                      <Button
                        disabled={false}
                        kind="primary"
                        loading={false}
                        onClick={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <ForwardRef(Button)
                          className="security--button"
                          disabled={false}
                          kind="primary"
                          onClick={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <button
                            className="security--button bx--btn bx--btn--primary"
                            disabled={false}
                            onClick={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            Add
                          </button>
                        </ForwardRef(Button)>
                      </Button>
                    </footer>
                  </section>
                </FocusTrap>
              </Portal>
            </Portal>
          </CSSTransitionGroupChild>
        </component>
      </TransitionGroup>
    </CSSTransitionGroup>
  </Transition>
</Panel>
`;
