// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagWallFilter tests FilterTagFragment should call the on change callback with the latest item state on change 1`] = `
Object {
  "availableItems": Array [
    Object {
      "id": "x",
      "label": "X",
    },
  ],
  "dispatchItemChange": [Function],
  "id": "test-id",
  "itemState": Object {
    "available": Object {
      "allItems": Array [
        Object {
          "id": "y",
          "label": "Y",
        },
        Object {
          "id": "x",
          "label": "X",
        },
      ],
      "items": Array [],
    },
    "selected": Object {
      "items": Array [
        Object {
          "id": "x",
          "isSelected": true,
        },
        Object {
          "id": "y",
          "label": "Y",
        },
      ],
    },
  },
  "itemToString": [Function],
  "onChange": [MockFunction] {
    "calls": Array [
      Array [
        Object {
          "available": Object {
            "allItems": Array [
              Object {
                "id": "y",
                "label": "Y",
              },
              Object {
                "id": "x",
                "label": "X",
              },
            ],
            "items": Array [],
          },
          "selected": Object {
            "items": Array [
              Object {
                "id": "x",
                "isSelected": true,
              },
              Object {
                "id": "y",
                "label": "Y",
              },
            ],
          },
        },
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "placeholder": "placeholder",
  "selectedItems": Array [
    Object {
      "id": "y",
      "label": "Y",
    },
  ],
  "tagWallLabel": null,
  "tearsheetProps": Object {
    "closeButton": Object {
      "onClick": [MockFunction],
    },
    "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
    "heading": "TagWallFilter Heading",
    "primaryButton": Object {
      "onClick": [MockFunction],
    },
    "secondaryButton": Object {
      "onClick": [MockFunction],
    },
  },
}
`;

exports[`TagWallFilter tests FilterTagFragment should call the on change callback with the latest item state on change 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "available": Object {
          "allItems": Array [
            Object {
              "id": "y",
              "label": "Y",
            },
            Object {
              "id": "x",
              "label": "X",
            },
          ],
          "items": Array [],
        },
        "selected": Object {
          "items": Array [
            Object {
              "id": "x",
              "isSelected": true,
            },
            Object {
              "id": "y",
              "label": "Y",
            },
          ],
        },
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`TagWallFilter tests FilterTagFragment should call the on change callback with the latest item state on change 3`] = `
Object {
  "availableItems": Array [
    Object {
      "id": "x",
      "label": "X",
    },
  ],
  "dispatchItemChange": [Function],
  "id": "test-id",
  "itemState": Object {
    "available": Object {
      "allItems": Array [
        Object {
          "id": "y",
          "label": "Y",
        },
        Object {
          "id": "x",
          "label": "X",
        },
      ],
      "items": Array [
        Object {
          "id": "x",
          "label": undefined,
        },
      ],
    },
    "selected": Object {
      "items": Array [
        Object {
          "id": "y",
          "label": "Y",
        },
      ],
    },
  },
  "itemToString": [Function],
  "onChange": [MockFunction] {
    "calls": Array [
      Array [
        Object {
          "available": Object {
            "allItems": Array [
              Object {
                "id": "y",
                "label": "Y",
              },
              Object {
                "id": "x",
                "label": "X",
              },
            ],
            "items": Array [
              Object {
                "id": "x",
                "label": undefined,
              },
            ],
          },
          "selected": Object {
            "items": Array [
              Object {
                "id": "y",
                "label": "Y",
              },
            ],
          },
        },
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "placeholder": "placeholder",
  "selectedItems": Array [
    Object {
      "id": "y",
      "label": "Y",
    },
  ],
  "tagWallLabel": null,
  "tearsheetProps": Object {
    "closeButton": Object {
      "onClick": [MockFunction],
    },
    "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
    "heading": "TagWallFilter Heading",
    "primaryButton": Object {
      "onClick": [MockFunction],
    },
    "secondaryButton": Object {
      "onClick": [MockFunction],
    },
  },
}
`;

exports[`TagWallFilter tests FilterTagFragment should call the on change callback with the latest item state on change 4`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "available": Object {
          "allItems": Array [
            Object {
              "id": "y",
              "label": "Y",
            },
            Object {
              "id": "x",
              "label": "X",
            },
          ],
          "items": Array [
            Object {
              "id": "x",
              "label": undefined,
            },
          ],
        },
        "selected": Object {
          "items": Array [
            Object {
              "id": "y",
              "label": "Y",
            },
          ],
        },
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`TagWallFilter tests FilterTagFragment should render the fragment 1`] = `
<FilterTagFragment
  availableItems={
    Array [
      Object {
        "id": "x",
        "label": "X",
      },
    ]
  }
  id="test-id"
  itemToString={[Function]}
  onChange={[MockFunction]}
  placeholder="placeholder"
  selectedItems={
    Array [
      Object {
        "id": "y",
        "label": "Y",
      },
    ]
  }
  tagWallLabel={null}
  tearsheetProps={
    Object {
      "closeButton": Object {
        "onClick": [MockFunction],
      },
      "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
      "heading": "TagWallFilter Heading",
      "primaryButton": Object {
        "onClick": [MockFunction],
      },
      "secondaryButton": Object {
        "onClick": [MockFunction],
      },
    }
  }
>
  <mapProps(FilterTagFragmentRender)
    availableItems={
      Array [
        Object {
          "id": "x",
          "label": "X",
        },
      ]
    }
    dispatchItemChange={[Function]}
    id="test-id"
    itemState={
      Object {
        "available": Object {
          "allItems": Array [
            Object {
              "id": "y",
              "label": "Y",
            },
            Object {
              "id": "x",
              "label": "X",
            },
          ],
          "items": Array [
            Object {
              "id": "x",
              "label": "X",
            },
          ],
        },
        "selected": Object {
          "items": Array [
            Object {
              "id": "y",
              "label": "Y",
            },
          ],
        },
      }
    }
    itemToString={[Function]}
    onChange={[MockFunction]}
    placeholder="placeholder"
    selectedItems={
      Array [
        Object {
          "id": "y",
          "label": "Y",
        },
      ]
    }
    tagWallLabel={null}
    tearsheetProps={
      Object {
        "closeButton": Object {
          "onClick": [MockFunction],
        },
        "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
        "heading": "TagWallFilter Heading",
        "primaryButton": Object {
          "onClick": [MockFunction],
        },
        "secondaryButton": Object {
          "onClick": [MockFunction],
        },
      }
    }
  >
    <FilterTagFragmentRender
      availableItems={
        Array [
          Object {
            "id": "x",
            "label": "X",
          },
        ]
      }
      dispatchItemChange={[Function]}
      id="test-id"
      itemToString={[Function]}
      onChange={[MockFunction]}
      placeholder="placeholder"
      selectedItems={
        Array [
          Object {
            "id": "y",
            "label": "Y",
          },
        ]
      }
      tagWallLabel={null}
      tearsheetProps={
        Object {
          "closeButton": Object {
            "onClick": [MockFunction],
          },
          "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
          "heading": "TagWallFilter Heading",
          "primaryButton": Object {
            "onClick": [MockFunction],
          },
          "secondaryButton": Object {
            "onClick": [MockFunction],
          },
        }
      }
    >
      <TearsheetSmall
        body=""
        className=""
        closeButton={
          Object {
            "onClick": [MockFunction],
          }
        }
        description={[Function]}
        flush={false}
        focusTrap={true}
        heading="TagWallFilter Heading"
        isOpen={true}
        labels={Object {}}
        loading={false}
        loadingMessage=""
        primaryButton={
          Object {
            "onClick": [MockFunction],
          }
        }
        rootNode={
          <body
            class="security--portal__container"
          >
            <section
              aria-hidden="false"
              class="security--tearsheet--small security--tearsheet--small__transition--appear"
            >
              <header
                class="security--tearsheet--small__header"
              >
                <h1
                  class="security--tearsheet--small__title"
                >
                  TagWallFilter Heading
                </h1>
                <div
                  class="security--tearsheet--small__description"
                >
                  <div
                    class="security--tag-wall-filter__description"
                  >
                    What’s the secret to minced and ground doughnut? Always use small garlic.
                    <section
                      aria-label=""
                      class="security--tag-wall security--tag-wall-filter__tag-wall"
                    >
                      
                      <span
                        class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                      >
                        Y
                        <button
                          aria-label=""
                          class="security--tag--interactive__button"
                        >
                          <svg
                            aria-hidden="true"
                            class="security--icon security--tag--interactive__button__icon"
                            focusable="false"
                            height="16"
                            preserveAspectRatio="xMidYMid meet"
                            style="will-change: transform;"
                            viewBox="0 0 16 16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                            />
                          </svg>
                        </button>
                      </span>
                    </section>
                  </div>
                </div>
              </header>
              <section
                class="security--tearsheet--small__body"
              >
                <div
                  class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                  role="presentation"
                >
                  <div
                    aria-hidden="true"
                    class="security--scroll-gradient__before"
                    role="presentation"
                  />
                  <div
                    class="security--scroll-gradient__content"
                  >
                    <div
                      class="security--tearsheet--small__scroll-gradient__content"
                    >
                      <div
                        class="security--filter bx--list-box"
                        id="test-id"
                      >
                        <div
                          aria-controls="test-id__menu"
                          aria-expanded="true"
                          aria-haspopup="true"
                          aria-label="close menu"
                          aria-owns="test-id__menu"
                          class="bx--list-box__field"
                          data-toggle="true"
                          role="button"
                          tabindex="-1"
                          type="button"
                        >
                          <input
                            aria-autocomplete="list"
                            aria-expanded="true"
                            autocomplete="off"
                            class="security--filter__input-field bx--text-input"
                            id="test-id"
                            placeholder="placeholder"
                            role="combobox"
                            value=""
                          />
                          <span
                            class="security--filter__search"
                          >
                            <svg
                              aria-hidden="true"
                              class="security--icon security--filter__search__icon"
                              fill="var(--icon-01, #f4f4f4)"
                              focusable="false"
                              height="20"
                              preserveAspectRatio="xMidYMid meet"
                              style="will-change: transform;"
                              viewBox="0 0 32 32"
                              width="20"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                              />
                            </svg>
                          </span>
                        </div>
                        <div
                          class="security--filter__list-container"
                          id="test-id__menu"
                          role="listbox"
                        >
                          <div
                            class="security--filter__list-item"
                            id="downshift-0-item-0"
                            role="button"
                            tabindex="0"
                          >
                            <div
                              class="bx--list-box__menu-item__option"
                            >
                              <div
                                aria-labelledby="downshift-0-item-0"
                                class="security--filter__list-item__entry"
                              >
                                X
                                <span
                                  class="security--filter__add"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="security--icon security--filter__add__icon"
                                    focusable="false"
                                    height="20"
                                    preserveAspectRatio="xMidYMid meet"
                                    style="will-change: transform;"
                                    viewBox="0 0 32 32"
                                    width="20"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                    />
                                  </svg>
                                </span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    aria-hidden="true"
                    class="security--scroll-gradient__after"
                    role="presentation"
                  />
                </div>
              </section>
              <footer
                class="security--tearsheet--small__footer"
              >
                <button
                  class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                  tabindex="0"
                  type="button"
                >
                  Cancel
                </button>
                <button
                  class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                  tabindex="0"
                  type="button"
                >
                  Save
                </button>
              </footer>
              <button
                aria-label="Close"
                class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
              >
                <svg
                  aria-hidden="true"
                  class="security--icon"
                  focusable="false"
                  height="20"
                  preserveAspectRatio="xMidYMid meet"
                  style="will-change: transform;"
                  viewBox="0 0 32 32"
                  width="20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                  />
                </svg>
              </button>
            </section>
            <div
              class="security--portal__overlay"
              tabindex="-1"
            />
          </body>
        }
        secondaryButton={
          Object {
            "onClick": [MockFunction],
          }
        }
        stopPropagation={false}
      >
        <Transition
          className="security--tearsheet--small"
          component="span"
          timeout={300}
        >
          <CSSTransitionGroup
            className="security--transition"
            component="span"
            transitionAppear={true}
            transitionAppearTimeout={300}
            transitionEnter={true}
            transitionEnterTimeout={300}
            transitionLeave={true}
            transitionLeaveTimeout={300}
            transitionName={
              Object {
                "appear": "security--tearsheet--small__transition--appear",
                "appearActive": "security--tearsheet--small__transition--appear--active",
                "enter": "security--tearsheet--small__transition--enter",
                "enterActive": "security--tearsheet--small__transition--enter--active",
                "leave": "security--tearsheet--small__transition--leave",
                "leaveActive": "security--tearsheet--small__transition--leave--active",
              }
            }
          >
            <TransitionGroup
              childFactory={[Function]}
              className="security--transition"
              component="span"
              transitionAppear={true}
              transitionAppearTimeout={300}
              transitionEnter={true}
              transitionEnterTimeout={300}
              transitionLeave={true}
              transitionLeaveTimeout={300}
              transitionName={
                Object {
                  "appear": "security--tearsheet--small__transition--appear",
                  "appearActive": "security--tearsheet--small__transition--appear--active",
                  "enter": "security--tearsheet--small__transition--enter",
                  "enterActive": "security--tearsheet--small__transition--enter--active",
                  "leave": "security--tearsheet--small__transition--leave",
                  "leaveActive": "security--tearsheet--small__transition--leave--active",
                }
              }
            >
              <span
                className="security--transition"
              >
                <CSSTransitionGroupChild
                  appear={true}
                  appearTimeout={300}
                  enter={true}
                  enterTimeout={300}
                  key=".0"
                  leave={true}
                  leaveTimeout={300}
                  name={
                    Object {
                      "appear": "security--tearsheet--small__transition--appear",
                      "appearActive": "security--tearsheet--small__transition--appear--active",
                      "enter": "security--tearsheet--small__transition--enter",
                      "enterActive": "security--tearsheet--small__transition--enter--active",
                      "leave": "security--tearsheet--small__transition--leave",
                      "leaveActive": "security--tearsheet--small__transition--leave--active",
                    }
                  }
                >
                  <Portal
                    focusTrap={true}
                    hasOverlay={true}
                    initialFocus={null}
                    key=".0"
                    rootNode={
                      <body
                        class="security--portal__container"
                      >
                        <section
                          aria-hidden="false"
                          class="security--tearsheet--small security--tearsheet--small__transition--appear"
                        >
                          <header
                            class="security--tearsheet--small__header"
                          >
                            <h1
                              class="security--tearsheet--small__title"
                            >
                              TagWallFilter Heading
                            </h1>
                            <div
                              class="security--tearsheet--small__description"
                            >
                              <div
                                class="security--tag-wall-filter__description"
                              >
                                What’s the secret to minced and ground doughnut? Always use small garlic.
                                <section
                                  aria-label=""
                                  class="security--tag-wall security--tag-wall-filter__tag-wall"
                                >
                                  
                                  <span
                                    class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                  >
                                    Y
                                    <button
                                      aria-label=""
                                      class="security--tag--interactive__button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="security--icon security--tag--interactive__button__icon"
                                        focusable="false"
                                        height="16"
                                        preserveAspectRatio="xMidYMid meet"
                                        style="will-change: transform;"
                                        viewBox="0 0 16 16"
                                        width="16"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                        />
                                      </svg>
                                    </button>
                                  </span>
                                </section>
                              </div>
                            </div>
                          </header>
                          <section
                            class="security--tearsheet--small__body"
                          >
                            <div
                              class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                              role="presentation"
                            >
                              <div
                                aria-hidden="true"
                                class="security--scroll-gradient__before"
                                role="presentation"
                              />
                              <div
                                class="security--scroll-gradient__content"
                              >
                                <div
                                  class="security--tearsheet--small__scroll-gradient__content"
                                >
                                  <div
                                    class="security--filter bx--list-box"
                                    id="test-id"
                                  >
                                    <div
                                      aria-controls="test-id__menu"
                                      aria-expanded="true"
                                      aria-haspopup="true"
                                      aria-label="close menu"
                                      aria-owns="test-id__menu"
                                      class="bx--list-box__field"
                                      data-toggle="true"
                                      role="button"
                                      tabindex="-1"
                                      type="button"
                                    >
                                      <input
                                        aria-autocomplete="list"
                                        aria-expanded="true"
                                        autocomplete="off"
                                        class="security--filter__input-field bx--text-input"
                                        id="test-id"
                                        placeholder="placeholder"
                                        role="combobox"
                                        value=""
                                      />
                                      <span
                                        class="security--filter__search"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="security--icon security--filter__search__icon"
                                          fill="var(--icon-01, #f4f4f4)"
                                          focusable="false"
                                          height="20"
                                          preserveAspectRatio="xMidYMid meet"
                                          style="will-change: transform;"
                                          viewBox="0 0 32 32"
                                          width="20"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                          />
                                        </svg>
                                      </span>
                                    </div>
                                    <div
                                      class="security--filter__list-container"
                                      id="test-id__menu"
                                      role="listbox"
                                    >
                                      <div
                                        class="security--filter__list-item"
                                        id="downshift-0-item-0"
                                        role="button"
                                        tabindex="0"
                                      >
                                        <div
                                          class="bx--list-box__menu-item__option"
                                        >
                                          <div
                                            aria-labelledby="downshift-0-item-0"
                                            class="security--filter__list-item__entry"
                                          >
                                            X
                                            <span
                                              class="security--filter__add"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="security--icon security--filter__add__icon"
                                                focusable="false"
                                                height="20"
                                                preserveAspectRatio="xMidYMid meet"
                                                style="will-change: transform;"
                                                viewBox="0 0 32 32"
                                                width="20"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                />
                                              </svg>
                                            </span>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                aria-hidden="true"
                                class="security--scroll-gradient__after"
                                role="presentation"
                              />
                            </div>
                          </section>
                          <footer
                            class="security--tearsheet--small__footer"
                          >
                            <button
                              class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                              tabindex="0"
                              type="button"
                            >
                              Cancel
                            </button>
                            <button
                              class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                              tabindex="0"
                              type="button"
                            >
                              Save
                            </button>
                          </footer>
                          <button
                            aria-label="Close"
                            class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                          >
                            <svg
                              aria-hidden="true"
                              class="security--icon"
                              focusable="false"
                              height="20"
                              preserveAspectRatio="xMidYMid meet"
                              style="will-change: transform;"
                              viewBox="0 0 32 32"
                              width="20"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                              />
                            </svg>
                          </button>
                        </section>
                        <div
                          class="security--portal__overlay"
                          tabindex="-1"
                        />
                      </body>
                    }
                    stopPropagation={false}
                  >
                    <Portal
                      containerInfo={
                        <body
                          class="security--portal__container"
                        >
                          <section
                            aria-hidden="false"
                            class="security--tearsheet--small security--tearsheet--small__transition--appear"
                          >
                            <header
                              class="security--tearsheet--small__header"
                            >
                              <h1
                                class="security--tearsheet--small__title"
                              >
                                TagWallFilter Heading
                              </h1>
                              <div
                                class="security--tearsheet--small__description"
                              >
                                <div
                                  class="security--tag-wall-filter__description"
                                >
                                  What’s the secret to minced and ground doughnut? Always use small garlic.
                                  <section
                                    aria-label=""
                                    class="security--tag-wall security--tag-wall-filter__tag-wall"
                                  >
                                    
                                    <span
                                      class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                    >
                                      Y
                                      <button
                                        aria-label=""
                                        class="security--tag--interactive__button"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="security--icon security--tag--interactive__button__icon"
                                          focusable="false"
                                          height="16"
                                          preserveAspectRatio="xMidYMid meet"
                                          style="will-change: transform;"
                                          viewBox="0 0 16 16"
                                          width="16"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                          />
                                        </svg>
                                      </button>
                                    </span>
                                  </section>
                                </div>
                              </div>
                            </header>
                            <section
                              class="security--tearsheet--small__body"
                            >
                              <div
                                class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                                role="presentation"
                              >
                                <div
                                  aria-hidden="true"
                                  class="security--scroll-gradient__before"
                                  role="presentation"
                                />
                                <div
                                  class="security--scroll-gradient__content"
                                >
                                  <div
                                    class="security--tearsheet--small__scroll-gradient__content"
                                  >
                                    <div
                                      class="security--filter bx--list-box"
                                      id="test-id"
                                    >
                                      <div
                                        aria-controls="test-id__menu"
                                        aria-expanded="true"
                                        aria-haspopup="true"
                                        aria-label="close menu"
                                        aria-owns="test-id__menu"
                                        class="bx--list-box__field"
                                        data-toggle="true"
                                        role="button"
                                        tabindex="-1"
                                        type="button"
                                      >
                                        <input
                                          aria-autocomplete="list"
                                          aria-expanded="true"
                                          autocomplete="off"
                                          class="security--filter__input-field bx--text-input"
                                          id="test-id"
                                          placeholder="placeholder"
                                          role="combobox"
                                          value=""
                                        />
                                        <span
                                          class="security--filter__search"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="security--icon security--filter__search__icon"
                                            fill="var(--icon-01, #f4f4f4)"
                                            focusable="false"
                                            height="20"
                                            preserveAspectRatio="xMidYMid meet"
                                            style="will-change: transform;"
                                            viewBox="0 0 32 32"
                                            width="20"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                            />
                                          </svg>
                                        </span>
                                      </div>
                                      <div
                                        class="security--filter__list-container"
                                        id="test-id__menu"
                                        role="listbox"
                                      >
                                        <div
                                          class="security--filter__list-item"
                                          id="downshift-0-item-0"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <div
                                            class="bx--list-box__menu-item__option"
                                          >
                                            <div
                                              aria-labelledby="downshift-0-item-0"
                                              class="security--filter__list-item__entry"
                                            >
                                              X
                                              <span
                                                class="security--filter__add"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="security--icon security--filter__add__icon"
                                                  focusable="false"
                                                  height="20"
                                                  preserveAspectRatio="xMidYMid meet"
                                                  style="will-change: transform;"
                                                  viewBox="0 0 32 32"
                                                  width="20"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                  />
                                                </svg>
                                              </span>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  aria-hidden="true"
                                  class="security--scroll-gradient__after"
                                  role="presentation"
                                />
                              </div>
                            </section>
                            <footer
                              class="security--tearsheet--small__footer"
                            >
                              <button
                                class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                                tabindex="0"
                                type="button"
                              >
                                Cancel
                              </button>
                              <button
                                class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                                tabindex="0"
                                type="button"
                              >
                                Save
                              </button>
                            </footer>
                            <button
                              aria-label="Close"
                              class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                            >
                              <svg
                                aria-hidden="true"
                                class="security--icon"
                                focusable="false"
                                height="20"
                                preserveAspectRatio="xMidYMid meet"
                                style="will-change: transform;"
                                viewBox="0 0 32 32"
                                width="20"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                                />
                              </svg>
                            </button>
                          </section>
                          <div
                            class="security--portal__overlay"
                            tabindex="-1"
                          />
                        </body>
                      }
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={true}
                        focusTrapOptions={
                          Object {
                            "initialFocus": null,
                          }
                        }
                        paused={false}
                      >
                        <section
                          aria-hidden={false}
                          className="security--tearsheet--small"
                        >
                          <header
                            className="security--tearsheet--small__header"
                          >
                            <h1
                              className="security--tearsheet--small__title"
                            >
                              TagWallFilter Heading
                            </h1>
                            <div
                              className="security--tearsheet--small__description"
                            >
                              <div
                                className="security--tag-wall-filter__description"
                              >
                                What’s the secret to minced and ground doughnut? Always use small garlic.
                                <TagWall
                                  addButtonDisabled={true}
                                  addLabel=""
                                  className="security--tag-wall-filter__tag-wall"
                                  disable={false}
                                  itemToString={[Function]}
                                  items={
                                    Array [
                                      Object {
                                        "id": "y",
                                        "label": "Y",
                                      },
                                    ]
                                  }
                                  label={null}
                                  labels={Object {}}
                                  onAddButton={[Function]}
                                  onChange={[Function]}
                                >
                                  <section
                                    aria-label=""
                                    className="security--tag-wall security--tag-wall-filter__tag-wall"
                                  >
                                    <InteractiveTag
                                      isSelected={false}
                                      key="tag__0"
                                      onRemove={[Function]}
                                      removable={true}
                                      removeBtnLabel=""
                                      type="gray"
                                    >
                                      <Tag
                                        className="security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                        filter={false}
                                        type="gray"
                                      >
                                        <span
                                          className="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                        >
                                          Y
                                          <button
                                            aria-label=""
                                            className="security--tag--interactive__button"
                                            onClick={[Function]}
                                          >
                                            <Icon
                                              className="security--tag--interactive__button__icon"
                                              height={null}
                                              path={null}
                                              renderIcon={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                }
                                              }
                                              size={20}
                                              viewBox="0 0 32 32"
                                              width={null}
                                            >
                                              <ForwardRef(Close16)
                                                aria-hidden="true"
                                                className="security--icon security--tag--interactive__button__icon"
                                                focusable={false}
                                                preserveAspectRatio="xMidYMid meet"
                                                style={
                                                  Object {
                                                    "willChange": "transform",
                                                  }
                                                }
                                              >
                                                <Icon
                                                  aria-hidden="true"
                                                  className="security--icon security--tag--interactive__button__icon"
                                                  focusable={false}
                                                  height={16}
                                                  preserveAspectRatio="xMidYMid meet"
                                                  style={
                                                    Object {
                                                      "willChange": "transform",
                                                    }
                                                  }
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="security--icon security--tag--interactive__button__icon"
                                                    focusable={false}
                                                    height={16}
                                                    preserveAspectRatio="xMidYMid meet"
                                                    style={
                                                      Object {
                                                        "willChange": "transform",
                                                      }
                                                    }
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                                    />
                                                  </svg>
                                                </Icon>
                                              </ForwardRef(Close16)>
                                            </Icon>
                                          </button>
                                        </span>
                                      </Tag>
                                    </InteractiveTag>
                                  </section>
                                </TagWall>
                              </div>
                            </div>
                          </header>
                          <section
                            className="security--tearsheet--small__body"
                          >
                            <ScrollGradient
                              className="security--tearsheet--small__content"
                              color="var(--ui-01, #262626)"
                              direction="Y"
                              getScrollElementRef={[Function]}
                              hideStartGradient={false}
                              onScroll={[Function]}
                            >
                              <div
                                className="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                                role="presentation"
                              >
                                <div
                                  aria-hidden={true}
                                  className="security--scroll-gradient__before"
                                  role="presentation"
                                  style={
                                    Object {
                                      "backgroundImage": "linear-gradient(0deg, rgba(0,0,0,0), var(--ui-01, #262626) 90%)",
                                    }
                                  }
                                />
                                <div
                                  className="security--scroll-gradient__content"
                                  onScroll={[Function]}
                                >
                                  <div
                                    className="security--tearsheet--small__scroll-gradient__content"
                                  >
                                    <Filter
                                      className=""
                                      compareItems={[Function]}
                                      disabled={false}
                                      filterFieldClearAllTooltip="Clear all selected items"
                                      filterFieldClearSelectionTooltip="Clear selected item"
                                      filterItems={[Function]}
                                      id="test-id"
                                      initialSelectedItems={Array []}
                                      itemToString={[Function]}
                                      items={
                                        Array [
                                          Object {
                                            "id": "x",
                                            "label": "X",
                                          },
                                        ]
                                      }
                                      locale="en"
                                      onChange={[Function]}
                                      placeholder="placeholder"
                                      selectedItems={Array []}
                                      sortItems={[Function]}
                                    >
                                      <Downshift
                                        breakingChanges={Object {}}
                                        clearSelection={[Function]}
                                        defaultHighlightedIndex={null}
                                        defaultInputValue=""
                                        defaultIsOpen={false}
                                        defaultSelectedItem={null}
                                        environment={[Window]}
                                        getA11yStatusMessage={[Function]}
                                        highlightedIndex={null}
                                        inputValue=""
                                        isOpen={true}
                                        itemToString={[Function]}
                                        onChange={[Function]}
                                        onInputValueChange={[Function]}
                                        onOuterClick={[Function]}
                                        onSelect={[Function]}
                                        onStateChange={[Function]}
                                        onUserAction={[Function]}
                                        render={[Function]}
                                        selectedItemChanged={[Function]}
                                        stateReducer={[Function]}
                                      >
                                        <ListBox
                                          className="security--filter"
                                          disabled={false}
                                          id="test-id"
                                          innerRef={[Function]}
                                          type="default"
                                        >
                                          <div
                                            className="security--filter bx--list-box"
                                            id="test-id"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                          >
                                            <ListBoxField
                                              aria-expanded={true}
                                              aria-haspopup={true}
                                              aria-label="close menu"
                                              data-toggle={true}
                                              disabled={false}
                                              id="test-id"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="button"
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <div
                                                aria-controls="test-id__menu"
                                                aria-expanded={true}
                                                aria-haspopup={true}
                                                aria-label="close menu"
                                                aria-owns="test-id__menu"
                                                className="bx--list-box__field"
                                                data-toggle={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="button"
                                                tabIndex={-1}
                                                type="button"
                                              >
                                                <input
                                                  aria-activedescendant={null}
                                                  aria-autocomplete="list"
                                                  aria-expanded={true}
                                                  autoComplete="off"
                                                  className="security--filter__input-field bx--text-input"
                                                  disabled={false}
                                                  id="test-id"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="placeholder"
                                                  role="combobox"
                                                  value=""
                                                />
                                                <span
                                                  className="security--filter__search"
                                                >
                                                  <Icon
                                                    className="security--filter__search__icon"
                                                    fill="var(--icon-01, #f4f4f4)"
                                                    height={null}
                                                    path={null}
                                                    renderIcon={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      }
                                                    }
                                                    size={20}
                                                    viewBox="0 0 32 32"
                                                    width={null}
                                                  >
                                                    <ForwardRef(Search20)
                                                      aria-hidden="true"
                                                      className="security--icon security--filter__search__icon"
                                                      fill="var(--icon-01, #f4f4f4)"
                                                      focusable={false}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      style={
                                                        Object {
                                                          "willChange": "transform",
                                                        }
                                                      }
                                                    >
                                                      <Icon
                                                        aria-hidden="true"
                                                        className="security--icon security--filter__search__icon"
                                                        fill="var(--icon-01, #f4f4f4)"
                                                        focusable={false}
                                                        height={20}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        style={
                                                          Object {
                                                            "willChange": "transform",
                                                          }
                                                        }
                                                        viewBox="0 0 32 32"
                                                        width={20}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="security--icon security--filter__search__icon"
                                                          fill="var(--icon-01, #f4f4f4)"
                                                          focusable={false}
                                                          height={20}
                                                          preserveAspectRatio="xMidYMid meet"
                                                          style={
                                                            Object {
                                                              "willChange": "transform",
                                                            }
                                                          }
                                                          viewBox="0 0 32 32"
                                                          width={20}
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                                          />
                                                        </svg>
                                                      </Icon>
                                                    </ForwardRef(Search20)>
                                                  </Icon>
                                                </span>
                                              </div>
                                            </ListBoxField>
                                            <ListBoxMenu
                                              className="security--filter__list-container"
                                              id="test-id"
                                            >
                                              <div
                                                className="security--filter__list-container"
                                                id="test-id__menu"
                                                role="listbox"
                                              >
                                                <ListBoxMenuItem
                                                  className="security--filter__list-item"
                                                  id="downshift-0-item-0"
                                                  isActive={false}
                                                  isHighlighted={false}
                                                  key="downshift-0-item-0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseMove={[Function]}
                                                  role="button"
                                                  tabIndex="0"
                                                >
                                                  <div
                                                    className="security--filter__list-item"
                                                    id="downshift-0-item-0"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseMove={[Function]}
                                                    role="button"
                                                    tabIndex="0"
                                                  >
                                                    <div
                                                      className="bx--list-box__menu-item__option"
                                                    >
                                                      <div
                                                        aria-labelledby="downshift-0-item-0"
                                                        className="security--filter__list-item__entry"
                                                      >
                                                        X
                                                        <span
                                                          className="security--filter__add"
                                                        >
                                                          <Icon
                                                            className="security--filter__add__icon"
                                                            height={null}
                                                            path={null}
                                                            renderIcon={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              }
                                                            }
                                                            size={20}
                                                            viewBox="0 0 32 32"
                                                            width={null}
                                                          >
                                                            <ForwardRef(Add20)
                                                              aria-hidden="true"
                                                              className="security--icon security--filter__add__icon"
                                                              focusable={false}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              style={
                                                                Object {
                                                                  "willChange": "transform",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                aria-hidden="true"
                                                                className="security--icon security--filter__add__icon"
                                                                focusable={false}
                                                                height={20}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                style={
                                                                  Object {
                                                                    "willChange": "transform",
                                                                  }
                                                                }
                                                                viewBox="0 0 32 32"
                                                                width={20}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="security--icon security--filter__add__icon"
                                                                  focusable={false}
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  style={
                                                                    Object {
                                                                      "willChange": "transform",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                                  />
                                                                </svg>
                                                              </Icon>
                                                            </ForwardRef(Add20)>
                                                          </Icon>
                                                        </span>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </ListBoxMenuItem>
                                              </div>
                                            </ListBoxMenu>
                                          </div>
                                        </ListBox>
                                      </Downshift>
                                    </Filter>
                                  </div>
                                </div>
                                <div
                                  aria-hidden={true}
                                  className="security--scroll-gradient__after"
                                  role="presentation"
                                  style={
                                    Object {
                                      "backgroundImage": "linear-gradient(0deg, var(--ui-01, #262626) 10%, rgba(0,0,0,0))",
                                    }
                                  }
                                />
                              </div>
                            </ScrollGradient>
                          </section>
                          <footer
                            className="security--tearsheet--small__footer"
                          >
                            <Button
                              className="security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary"
                              disabled={false}
                              kind="secondary"
                              largeText={null}
                              loading={false}
                              onClick={[MockFunction]}
                              size="large"
                              tabIndex={0}
                              type="button"
                            >
                              <ForwardRef(Button)
                                className="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large"
                                disabled={false}
                                kind="secondary"
                                onClick={[MockFunction]}
                                size={null}
                                tabIndex={0}
                                type="button"
                              >
                                <button
                                  className="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                                  disabled={false}
                                  onClick={[MockFunction]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  Cancel
                                </button>
                              </ForwardRef(Button)>
                            </Button>
                            <Button
                              className="security--tearsheet--small__footer__button"
                              disabled={false}
                              kind="primary"
                              largeText={null}
                              loading={false}
                              onClick={[MockFunction]}
                              size="large"
                              tabIndex={0}
                              type="button"
                            >
                              <ForwardRef(Button)
                                className="security--button security--tearsheet--small__footer__button security--button--large"
                                disabled={false}
                                kind="primary"
                                onClick={[MockFunction]}
                                size={null}
                                tabIndex={0}
                                type="button"
                              >
                                <button
                                  className="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                                  disabled={false}
                                  onClick={[MockFunction]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  Save
                                </button>
                              </ForwardRef(Button)>
                            </Button>
                          </footer>
                          <IconButton
                            className="security--tearsheet--small__button--close"
                            iconClassName=""
                            iconSize={20}
                            label="Close"
                            onClick={[MockFunction]}
                            path={null}
                            renderIcon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              }
                            }
                            size="lg"
                            state={false}
                            tooltip={false}
                            tooltipDirection="bottom"
                          >
                            <button
                              aria-label="Close"
                              className="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                              onClick={[MockFunction]}
                            >
                              <Icon
                                className=""
                                height={null}
                                path={null}
                                renderIcon={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  }
                                }
                                size={20}
                                viewBox="0 0 32 32"
                                width={null}
                              >
                                <ForwardRef(Close20)
                                  aria-hidden="true"
                                  className="security--icon"
                                  focusable={false}
                                  preserveAspectRatio="xMidYMid meet"
                                  style={
                                    Object {
                                      "willChange": "transform",
                                    }
                                  }
                                >
                                  <Icon
                                    aria-hidden="true"
                                    className="security--icon"
                                    focusable={false}
                                    height={20}
                                    preserveAspectRatio="xMidYMid meet"
                                    style={
                                      Object {
                                        "willChange": "transform",
                                      }
                                    }
                                    viewBox="0 0 32 32"
                                    width={20}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="security--icon"
                                      focusable={false}
                                      height={20}
                                      preserveAspectRatio="xMidYMid meet"
                                      style={
                                        Object {
                                          "willChange": "transform",
                                        }
                                      }
                                      viewBox="0 0 32 32"
                                      width={20}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                                      />
                                    </svg>
                                  </Icon>
                                </ForwardRef(Close20)>
                              </Icon>
                            </button>
                          </IconButton>
                        </section>
                      </FocusTrap>
                    </Portal>
                  </Portal>
                </CSSTransitionGroupChild>
              </span>
            </TransitionGroup>
          </CSSTransitionGroup>
        </Transition>
      </TearsheetSmall>
    </FilterTagFragmentRender>
  </mapProps(FilterTagFragmentRender)>
</FilterTagFragment>
`;

exports[`TagWallFilter tests FilterTagFragment should render the fragment 2`] = `
<TagWall
  addButtonDisabled={true}
  addLabel=""
  className="security--tag-wall-filter__tag-wall"
  disable={false}
  itemToString={[Function]}
  items={
    Array [
      Object {
        "id": "y",
        "label": "Y",
      },
    ]
  }
  label={null}
  labels={Object {}}
  onAddButton={[Function]}
  onChange={[Function]}
>
  <section
    aria-label=""
    className="security--tag-wall security--tag-wall-filter__tag-wall"
  >
    <InteractiveTag
      isSelected={false}
      key="tag__0"
      onRemove={[Function]}
      removable={true}
      removeBtnLabel=""
      type="gray"
    >
      <Tag
        className="security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
        filter={false}
        type="gray"
      >
        <span
          className="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
        >
          Y
          <button
            aria-label=""
            className="security--tag--interactive__button"
            onClick={[Function]}
          >
            <Icon
              className="security--tag--interactive__button__icon"
              height={null}
              path={null}
              renderIcon={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              size={20}
              viewBox="0 0 32 32"
              width={null}
            >
              <ForwardRef(Close16)
                aria-hidden="true"
                className="security--icon security--tag--interactive__button__icon"
                focusable={false}
                preserveAspectRatio="xMidYMid meet"
                style={
                  Object {
                    "willChange": "transform",
                  }
                }
              >
                <Icon
                  aria-hidden="true"
                  className="security--icon security--tag--interactive__button__icon"
                  focusable={false}
                  height={16}
                  preserveAspectRatio="xMidYMid meet"
                  style={
                    Object {
                      "willChange": "transform",
                    }
                  }
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <svg
                    aria-hidden={true}
                    className="security--icon security--tag--interactive__button__icon"
                    focusable={false}
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    style={
                      Object {
                        "willChange": "transform",
                      }
                    }
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                    />
                  </svg>
                </Icon>
              </ForwardRef(Close16)>
            </Icon>
          </button>
        </span>
      </Tag>
    </InteractiveTag>
  </section>
</TagWall>
`;

exports[`TagWallFilter tests TagWallFilter should mount the TagWallFilter component 1`] = `
<TagWallFilter
  availableItems={
    Array [
      Object {
        "id": "y",
        "label": "Y",
      },
    ]
  }
  closeButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  description="What’s the secret to minced and ground doughnut? Always use small garlic."
  filterFieldClearAllTooltip="Clear all selected items"
  filterFieldClearSelectionTooltip="Clear selected item"
  focusTrap={true}
  heading="TagWallFilter Heading"
  id="test-id"
  inputFieldPlaceholder=""
  onChange={[Function]}
  primaryButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  secondaryButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  selectedItems={
    Array [
      Object {
        "id": "x",
        "label": "X",
      },
    ]
  }
  tagWallLabel={null}
>
  <FilterTagFragment
    availableItems={
      Array [
        Object {
          "id": "y",
          "label": "Y",
        },
      ]
    }
    filterFieldClearAllTooltip="Clear all selected items"
    filterFieldClearSelectionTooltip="Clear selected item"
    id="test-id"
    itemToString={[Function]}
    onChange={[Function]}
    placeholder=""
    selectedItems={
      Array [
        Object {
          "id": "x",
          "label": "X",
        },
      ]
    }
    tagWallLabel={null}
    tearsheetProps={
      Object {
        "closeButton": Object {
          "onClick": [MockFunction],
        },
        "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
        "filterFieldClearAllTooltip": "Clear all selected items",
        "filterFieldClearSelectionTooltip": "Clear selected item",
        "flush": true,
        "focusTrap": true,
        "heading": "TagWallFilter Heading",
        "primaryButton": Object {
          "onClick": [MockFunction],
        },
        "secondaryButton": Object {
          "onClick": [MockFunction],
        },
      }
    }
  >
    <mapProps(FilterTagFragmentRender)
      availableItems={
        Array [
          Object {
            "id": "y",
            "label": "Y",
          },
        ]
      }
      dispatchItemChange={[Function]}
      filterFieldClearAllTooltip="Clear all selected items"
      filterFieldClearSelectionTooltip="Clear selected item"
      id="test-id"
      itemState={
        Object {
          "available": Object {
            "allItems": Array [
              Object {
                "id": "x",
                "label": "X",
              },
              Object {
                "id": "y",
                "label": "Y",
              },
            ],
            "items": Array [
              Object {
                "id": "y",
                "label": "Y",
              },
            ],
          },
          "selected": Object {
            "items": Array [
              Object {
                "id": "x",
                "label": "X",
              },
            ],
          },
        }
      }
      itemToString={[Function]}
      onChange={[Function]}
      placeholder=""
      selectedItems={
        Array [
          Object {
            "id": "x",
            "label": "X",
          },
        ]
      }
      tagWallLabel={null}
      tearsheetProps={
        Object {
          "closeButton": Object {
            "onClick": [MockFunction],
          },
          "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
          "filterFieldClearAllTooltip": "Clear all selected items",
          "filterFieldClearSelectionTooltip": "Clear selected item",
          "flush": true,
          "focusTrap": true,
          "heading": "TagWallFilter Heading",
          "primaryButton": Object {
            "onClick": [MockFunction],
          },
          "secondaryButton": Object {
            "onClick": [MockFunction],
          },
        }
      }
    >
      <FilterTagFragmentRender
        availableItems={
          Array [
            Object {
              "id": "y",
              "label": "Y",
            },
          ]
        }
        dispatchItemChange={[Function]}
        filterFieldClearAllTooltip="Clear all selected items"
        filterFieldClearSelectionTooltip="Clear selected item"
        id="test-id"
        itemToString={[Function]}
        onChange={[Function]}
        placeholder=""
        selectedItems={
          Array [
            Object {
              "id": "x",
              "label": "X",
            },
          ]
        }
        tagWallLabel={null}
        tearsheetProps={
          Object {
            "closeButton": Object {
              "onClick": [MockFunction],
            },
            "description": "What’s the secret to minced and ground doughnut? Always use small garlic.",
            "filterFieldClearAllTooltip": "Clear all selected items",
            "filterFieldClearSelectionTooltip": "Clear selected item",
            "flush": true,
            "focusTrap": true,
            "heading": "TagWallFilter Heading",
            "primaryButton": Object {
              "onClick": [MockFunction],
            },
            "secondaryButton": Object {
              "onClick": [MockFunction],
            },
          }
        }
      >
        <TearsheetSmall
          body=""
          className=""
          closeButton={
            Object {
              "onClick": [MockFunction],
            }
          }
          description={[Function]}
          filterFieldClearAllTooltip="Clear all selected items"
          filterFieldClearSelectionTooltip="Clear selected item"
          flush={true}
          focusTrap={true}
          heading="TagWallFilter Heading"
          isOpen={true}
          labels={Object {}}
          loading={false}
          loadingMessage=""
          primaryButton={
            Object {
              "onClick": [MockFunction],
            }
          }
          rootNode={
            <body
              class=""
            >
              <section
                aria-hidden="false"
                class="security--tearsheet--small security--tearsheet--small__transition--appear"
              >
                <header
                  class="security--tearsheet--small__header"
                >
                  <h1
                    class="security--tearsheet--small__title"
                  >
                    TagWallFilter Heading
                  </h1>
                  <div
                    class="security--tearsheet--small__description"
                  >
                    <div
                      class="security--tag-wall-filter__description"
                    >
                      What’s the secret to minced and ground doughnut? Always use small garlic.
                      <section
                        aria-label=""
                        class="security--tag-wall security--tag-wall-filter__tag-wall"
                      >
                        
                        <span
                          class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                        >
                          Y
                          <button
                            aria-label=""
                            class="security--tag--interactive__button"
                          >
                            <svg
                              aria-hidden="true"
                              class="security--icon security--tag--interactive__button__icon"
                              focusable="false"
                              height="16"
                              preserveAspectRatio="xMidYMid meet"
                              style="will-change: transform;"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                              />
                            </svg>
                          </button>
                        </span>
                      </section>
                    </div>
                  </div>
                </header>
                <section
                  class="security--tearsheet--small__body"
                >
                  <div
                    class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                    role="presentation"
                  >
                    <div
                      aria-hidden="true"
                      class="security--scroll-gradient__before"
                      role="presentation"
                    />
                    <div
                      class="security--scroll-gradient__content"
                    >
                      <div
                        class="security--tearsheet--small__scroll-gradient__content"
                      >
                        <div
                          class="security--filter bx--list-box"
                          id="test-id"
                        >
                          <div
                            aria-controls="test-id__menu"
                            aria-expanded="true"
                            aria-haspopup="true"
                            aria-label="close menu"
                            aria-owns="test-id__menu"
                            class="bx--list-box__field"
                            data-toggle="true"
                            role="button"
                            tabindex="-1"
                            type="button"
                          >
                            <input
                              aria-autocomplete="list"
                              aria-expanded="true"
                              autocomplete="off"
                              class="security--filter__input-field bx--text-input"
                              id="test-id"
                              placeholder="placeholder"
                              role="combobox"
                              value=""
                            />
                            <span
                              class="security--filter__search"
                            >
                              <svg
                                aria-hidden="true"
                                class="security--icon security--filter__search__icon"
                                fill="var(--icon-01, #f4f4f4)"
                                focusable="false"
                                height="20"
                                preserveAspectRatio="xMidYMid meet"
                                style="will-change: transform;"
                                viewBox="0 0 32 32"
                                width="20"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                />
                              </svg>
                            </span>
                          </div>
                          <div
                            class="security--filter__list-container"
                            id="test-id__menu"
                            role="listbox"
                          >
                            <div
                              class="security--filter__list-item"
                              id="downshift-0-item-0"
                              role="button"
                              tabindex="0"
                            >
                              <div
                                class="bx--list-box__menu-item__option"
                              >
                                <div
                                  aria-labelledby="downshift-0-item-0"
                                  class="security--filter__list-item__entry"
                                >
                                  X
                                  <span
                                    class="security--filter__add"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="security--icon security--filter__add__icon"
                                      focusable="false"
                                      height="20"
                                      preserveAspectRatio="xMidYMid meet"
                                      style="will-change: transform;"
                                      viewBox="0 0 32 32"
                                      width="20"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                      />
                                    </svg>
                                  </span>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      aria-hidden="true"
                      class="security--scroll-gradient__after"
                      role="presentation"
                    />
                  </div>
                </section>
                <footer
                  class="security--tearsheet--small__footer"
                >
                  <button
                    class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                    tabindex="0"
                    type="button"
                  >
                    Cancel
                  </button>
                  <button
                    class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                    tabindex="0"
                    type="button"
                  >
                    Save
                  </button>
                </footer>
                <button
                  aria-label="Close"
                  class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                >
                  <svg
                    aria-hidden="true"
                    class="security--icon"
                    focusable="false"
                    height="20"
                    preserveAspectRatio="xMidYMid meet"
                    style="will-change: transform;"
                    viewBox="0 0 32 32"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                    />
                  </svg>
                </button>
              </section>
              <div
                class="security--portal__overlay"
                tabindex="-1"
              />
              <section
                aria-hidden="false"
                class="security--tearsheet--small security--tearsheet--small__transition--appear"
              >
                <header
                  class="security--tearsheet--small__header"
                >
                  <h1
                    class="security--tearsheet--small__title"
                  >
                    TagWallFilter Heading
                  </h1>
                  <div
                    class="security--tearsheet--small__description"
                  >
                    <div
                      class="security--tag-wall-filter__description"
                    >
                      What’s the secret to minced and ground doughnut? Always use small garlic.
                      <section
                        aria-label=""
                        class="security--tag-wall security--tag-wall-filter__tag-wall"
                      >
                        
                        <span
                          class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                        >
                          X
                          <button
                            aria-label=""
                            class="security--tag--interactive__button"
                          >
                            <svg
                              aria-hidden="true"
                              class="security--icon security--tag--interactive__button__icon"
                              focusable="false"
                              height="16"
                              preserveAspectRatio="xMidYMid meet"
                              style="will-change: transform;"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                              />
                            </svg>
                          </button>
                        </span>
                      </section>
                    </div>
                  </div>
                </header>
                <section
                  class="security--tearsheet--small__body"
                >
                  <div
                    class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                    role="presentation"
                  >
                    <div
                      aria-hidden="true"
                      class="security--scroll-gradient__before"
                      role="presentation"
                    />
                    <div
                      class="security--scroll-gradient__content"
                    >
                      <div
                        class=""
                      >
                        <div
                          class="security--filter bx--list-box"
                          id="test-id"
                        >
                          <div
                            aria-controls="test-id__menu"
                            aria-expanded="true"
                            aria-haspopup="true"
                            aria-label="close menu"
                            aria-owns="test-id__menu"
                            class="bx--list-box__field"
                            data-toggle="true"
                            role="button"
                            tabindex="-1"
                            type="button"
                          >
                            <input
                              aria-autocomplete="list"
                              aria-expanded="true"
                              autocomplete="off"
                              class="security--filter__input-field bx--text-input"
                              id="test-id"
                              placeholder=""
                              role="combobox"
                              value=""
                            />
                            <span
                              class="security--filter__search"
                            >
                              <svg
                                aria-hidden="true"
                                class="security--icon security--filter__search__icon"
                                fill="var(--icon-01, #f4f4f4)"
                                focusable="false"
                                height="20"
                                preserveAspectRatio="xMidYMid meet"
                                style="will-change: transform;"
                                viewBox="0 0 32 32"
                                width="20"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                />
                              </svg>
                            </span>
                          </div>
                          <div
                            class="security--filter__list-container"
                            id="test-id__menu"
                            role="listbox"
                          >
                            <div
                              class="security--filter__list-item"
                              id="downshift-1-item-0"
                              role="button"
                              tabindex="0"
                            >
                              <div
                                class="bx--list-box__menu-item__option"
                              >
                                <div
                                  aria-labelledby="downshift-1-item-0"
                                  class="security--filter__list-item__entry"
                                >
                                  Y
                                  <span
                                    class="security--filter__add"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="security--icon security--filter__add__icon"
                                      focusable="false"
                                      height="20"
                                      preserveAspectRatio="xMidYMid meet"
                                      style="will-change: transform;"
                                      viewBox="0 0 32 32"
                                      width="20"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                      />
                                    </svg>
                                  </span>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      aria-hidden="true"
                      class="security--scroll-gradient__after"
                      role="presentation"
                    />
                  </div>
                </section>
                <footer
                  class="security--tearsheet--small__footer"
                >
                  <button
                    class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                    tabindex="0"
                    type="button"
                  >
                    Cancel
                  </button>
                  <button
                    class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                    tabindex="0"
                    type="button"
                  >
                    Save
                  </button>
                </footer>
                <button
                  aria-label="Close"
                  class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                >
                  <svg
                    aria-hidden="true"
                    class="security--icon"
                    focusable="false"
                    height="20"
                    preserveAspectRatio="xMidYMid meet"
                    style="will-change: transform;"
                    viewBox="0 0 32 32"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                    />
                  </svg>
                </button>
              </section>
              <div
                class="security--portal__overlay"
                tabindex="-1"
              />
            </body>
          }
          secondaryButton={
            Object {
              "onClick": [MockFunction],
            }
          }
          stopPropagation={false}
        >
          <Transition
            className="security--tearsheet--small"
            component="span"
            timeout={300}
          >
            <CSSTransitionGroup
              className="security--transition"
              component="span"
              transitionAppear={true}
              transitionAppearTimeout={300}
              transitionEnter={true}
              transitionEnterTimeout={300}
              transitionLeave={true}
              transitionLeaveTimeout={300}
              transitionName={
                Object {
                  "appear": "security--tearsheet--small__transition--appear",
                  "appearActive": "security--tearsheet--small__transition--appear--active",
                  "enter": "security--tearsheet--small__transition--enter",
                  "enterActive": "security--tearsheet--small__transition--enter--active",
                  "leave": "security--tearsheet--small__transition--leave",
                  "leaveActive": "security--tearsheet--small__transition--leave--active",
                }
              }
            >
              <TransitionGroup
                childFactory={[Function]}
                className="security--transition"
                component="span"
                transitionAppear={true}
                transitionAppearTimeout={300}
                transitionEnter={true}
                transitionEnterTimeout={300}
                transitionLeave={true}
                transitionLeaveTimeout={300}
                transitionName={
                  Object {
                    "appear": "security--tearsheet--small__transition--appear",
                    "appearActive": "security--tearsheet--small__transition--appear--active",
                    "enter": "security--tearsheet--small__transition--enter",
                    "enterActive": "security--tearsheet--small__transition--enter--active",
                    "leave": "security--tearsheet--small__transition--leave",
                    "leaveActive": "security--tearsheet--small__transition--leave--active",
                  }
                }
              >
                <span
                  className="security--transition"
                >
                  <CSSTransitionGroupChild
                    appear={true}
                    appearTimeout={300}
                    enter={true}
                    enterTimeout={300}
                    key=".0"
                    leave={true}
                    leaveTimeout={300}
                    name={
                      Object {
                        "appear": "security--tearsheet--small__transition--appear",
                        "appearActive": "security--tearsheet--small__transition--appear--active",
                        "enter": "security--tearsheet--small__transition--enter",
                        "enterActive": "security--tearsheet--small__transition--enter--active",
                        "leave": "security--tearsheet--small__transition--leave",
                        "leaveActive": "security--tearsheet--small__transition--leave--active",
                      }
                    }
                  >
                    <Portal
                      focusTrap={true}
                      hasOverlay={true}
                      initialFocus={null}
                      key=".0"
                      rootNode={
                        <body
                          class=""
                        >
                          <section
                            aria-hidden="false"
                            class="security--tearsheet--small security--tearsheet--small__transition--appear"
                          >
                            <header
                              class="security--tearsheet--small__header"
                            >
                              <h1
                                class="security--tearsheet--small__title"
                              >
                                TagWallFilter Heading
                              </h1>
                              <div
                                class="security--tearsheet--small__description"
                              >
                                <div
                                  class="security--tag-wall-filter__description"
                                >
                                  What’s the secret to minced and ground doughnut? Always use small garlic.
                                  <section
                                    aria-label=""
                                    class="security--tag-wall security--tag-wall-filter__tag-wall"
                                  >
                                    
                                    <span
                                      class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                    >
                                      Y
                                      <button
                                        aria-label=""
                                        class="security--tag--interactive__button"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="security--icon security--tag--interactive__button__icon"
                                          focusable="false"
                                          height="16"
                                          preserveAspectRatio="xMidYMid meet"
                                          style="will-change: transform;"
                                          viewBox="0 0 16 16"
                                          width="16"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                          />
                                        </svg>
                                      </button>
                                    </span>
                                  </section>
                                </div>
                              </div>
                            </header>
                            <section
                              class="security--tearsheet--small__body"
                            >
                              <div
                                class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                                role="presentation"
                              >
                                <div
                                  aria-hidden="true"
                                  class="security--scroll-gradient__before"
                                  role="presentation"
                                />
                                <div
                                  class="security--scroll-gradient__content"
                                >
                                  <div
                                    class="security--tearsheet--small__scroll-gradient__content"
                                  >
                                    <div
                                      class="security--filter bx--list-box"
                                      id="test-id"
                                    >
                                      <div
                                        aria-controls="test-id__menu"
                                        aria-expanded="true"
                                        aria-haspopup="true"
                                        aria-label="close menu"
                                        aria-owns="test-id__menu"
                                        class="bx--list-box__field"
                                        data-toggle="true"
                                        role="button"
                                        tabindex="-1"
                                        type="button"
                                      >
                                        <input
                                          aria-autocomplete="list"
                                          aria-expanded="true"
                                          autocomplete="off"
                                          class="security--filter__input-field bx--text-input"
                                          id="test-id"
                                          placeholder="placeholder"
                                          role="combobox"
                                          value=""
                                        />
                                        <span
                                          class="security--filter__search"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="security--icon security--filter__search__icon"
                                            fill="var(--icon-01, #f4f4f4)"
                                            focusable="false"
                                            height="20"
                                            preserveAspectRatio="xMidYMid meet"
                                            style="will-change: transform;"
                                            viewBox="0 0 32 32"
                                            width="20"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                            />
                                          </svg>
                                        </span>
                                      </div>
                                      <div
                                        class="security--filter__list-container"
                                        id="test-id__menu"
                                        role="listbox"
                                      >
                                        <div
                                          class="security--filter__list-item"
                                          id="downshift-0-item-0"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <div
                                            class="bx--list-box__menu-item__option"
                                          >
                                            <div
                                              aria-labelledby="downshift-0-item-0"
                                              class="security--filter__list-item__entry"
                                            >
                                              X
                                              <span
                                                class="security--filter__add"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="security--icon security--filter__add__icon"
                                                  focusable="false"
                                                  height="20"
                                                  preserveAspectRatio="xMidYMid meet"
                                                  style="will-change: transform;"
                                                  viewBox="0 0 32 32"
                                                  width="20"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                  />
                                                </svg>
                                              </span>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  aria-hidden="true"
                                  class="security--scroll-gradient__after"
                                  role="presentation"
                                />
                              </div>
                            </section>
                            <footer
                              class="security--tearsheet--small__footer"
                            >
                              <button
                                class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                                tabindex="0"
                                type="button"
                              >
                                Cancel
                              </button>
                              <button
                                class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                                tabindex="0"
                                type="button"
                              >
                                Save
                              </button>
                            </footer>
                            <button
                              aria-label="Close"
                              class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                            >
                              <svg
                                aria-hidden="true"
                                class="security--icon"
                                focusable="false"
                                height="20"
                                preserveAspectRatio="xMidYMid meet"
                                style="will-change: transform;"
                                viewBox="0 0 32 32"
                                width="20"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                                />
                              </svg>
                            </button>
                          </section>
                          <div
                            class="security--portal__overlay"
                            tabindex="-1"
                          />
                          <section
                            aria-hidden="false"
                            class="security--tearsheet--small security--tearsheet--small__transition--appear"
                          >
                            <header
                              class="security--tearsheet--small__header"
                            >
                              <h1
                                class="security--tearsheet--small__title"
                              >
                                TagWallFilter Heading
                              </h1>
                              <div
                                class="security--tearsheet--small__description"
                              >
                                <div
                                  class="security--tag-wall-filter__description"
                                >
                                  What’s the secret to minced and ground doughnut? Always use small garlic.
                                  <section
                                    aria-label=""
                                    class="security--tag-wall security--tag-wall-filter__tag-wall"
                                  >
                                    
                                    <span
                                      class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                    >
                                      X
                                      <button
                                        aria-label=""
                                        class="security--tag--interactive__button"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="security--icon security--tag--interactive__button__icon"
                                          focusable="false"
                                          height="16"
                                          preserveAspectRatio="xMidYMid meet"
                                          style="will-change: transform;"
                                          viewBox="0 0 16 16"
                                          width="16"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                          />
                                        </svg>
                                      </button>
                                    </span>
                                  </section>
                                </div>
                              </div>
                            </header>
                            <section
                              class="security--tearsheet--small__body"
                            >
                              <div
                                class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                                role="presentation"
                              >
                                <div
                                  aria-hidden="true"
                                  class="security--scroll-gradient__before"
                                  role="presentation"
                                />
                                <div
                                  class="security--scroll-gradient__content"
                                >
                                  <div
                                    class=""
                                  >
                                    <div
                                      class="security--filter bx--list-box"
                                      id="test-id"
                                    >
                                      <div
                                        aria-controls="test-id__menu"
                                        aria-expanded="true"
                                        aria-haspopup="true"
                                        aria-label="close menu"
                                        aria-owns="test-id__menu"
                                        class="bx--list-box__field"
                                        data-toggle="true"
                                        role="button"
                                        tabindex="-1"
                                        type="button"
                                      >
                                        <input
                                          aria-autocomplete="list"
                                          aria-expanded="true"
                                          autocomplete="off"
                                          class="security--filter__input-field bx--text-input"
                                          id="test-id"
                                          placeholder=""
                                          role="combobox"
                                          value=""
                                        />
                                        <span
                                          class="security--filter__search"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="security--icon security--filter__search__icon"
                                            fill="var(--icon-01, #f4f4f4)"
                                            focusable="false"
                                            height="20"
                                            preserveAspectRatio="xMidYMid meet"
                                            style="will-change: transform;"
                                            viewBox="0 0 32 32"
                                            width="20"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                            />
                                          </svg>
                                        </span>
                                      </div>
                                      <div
                                        class="security--filter__list-container"
                                        id="test-id__menu"
                                        role="listbox"
                                      >
                                        <div
                                          class="security--filter__list-item"
                                          id="downshift-1-item-0"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <div
                                            class="bx--list-box__menu-item__option"
                                          >
                                            <div
                                              aria-labelledby="downshift-1-item-0"
                                              class="security--filter__list-item__entry"
                                            >
                                              Y
                                              <span
                                                class="security--filter__add"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="security--icon security--filter__add__icon"
                                                  focusable="false"
                                                  height="20"
                                                  preserveAspectRatio="xMidYMid meet"
                                                  style="will-change: transform;"
                                                  viewBox="0 0 32 32"
                                                  width="20"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                  />
                                                </svg>
                                              </span>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  aria-hidden="true"
                                  class="security--scroll-gradient__after"
                                  role="presentation"
                                />
                              </div>
                            </section>
                            <footer
                              class="security--tearsheet--small__footer"
                            >
                              <button
                                class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                                tabindex="0"
                                type="button"
                              >
                                Cancel
                              </button>
                              <button
                                class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                                tabindex="0"
                                type="button"
                              >
                                Save
                              </button>
                            </footer>
                            <button
                              aria-label="Close"
                              class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                            >
                              <svg
                                aria-hidden="true"
                                class="security--icon"
                                focusable="false"
                                height="20"
                                preserveAspectRatio="xMidYMid meet"
                                style="will-change: transform;"
                                viewBox="0 0 32 32"
                                width="20"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                                />
                              </svg>
                            </button>
                          </section>
                          <div
                            class="security--portal__overlay"
                            tabindex="-1"
                          />
                        </body>
                      }
                      stopPropagation={false}
                    >
                      <Portal
                        containerInfo={
                          <body
                            class=""
                          >
                            <section
                              aria-hidden="false"
                              class="security--tearsheet--small security--tearsheet--small__transition--appear"
                            >
                              <header
                                class="security--tearsheet--small__header"
                              >
                                <h1
                                  class="security--tearsheet--small__title"
                                >
                                  TagWallFilter Heading
                                </h1>
                                <div
                                  class="security--tearsheet--small__description"
                                >
                                  <div
                                    class="security--tag-wall-filter__description"
                                  >
                                    What’s the secret to minced and ground doughnut? Always use small garlic.
                                    <section
                                      aria-label=""
                                      class="security--tag-wall security--tag-wall-filter__tag-wall"
                                    >
                                      
                                      <span
                                        class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                      >
                                        Y
                                        <button
                                          aria-label=""
                                          class="security--tag--interactive__button"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="security--icon security--tag--interactive__button__icon"
                                            focusable="false"
                                            height="16"
                                            preserveAspectRatio="xMidYMid meet"
                                            style="will-change: transform;"
                                            viewBox="0 0 16 16"
                                            width="16"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                            />
                                          </svg>
                                        </button>
                                      </span>
                                    </section>
                                  </div>
                                </div>
                              </header>
                              <section
                                class="security--tearsheet--small__body"
                              >
                                <div
                                  class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                                  role="presentation"
                                >
                                  <div
                                    aria-hidden="true"
                                    class="security--scroll-gradient__before"
                                    role="presentation"
                                  />
                                  <div
                                    class="security--scroll-gradient__content"
                                  >
                                    <div
                                      class="security--tearsheet--small__scroll-gradient__content"
                                    >
                                      <div
                                        class="security--filter bx--list-box"
                                        id="test-id"
                                      >
                                        <div
                                          aria-controls="test-id__menu"
                                          aria-expanded="true"
                                          aria-haspopup="true"
                                          aria-label="close menu"
                                          aria-owns="test-id__menu"
                                          class="bx--list-box__field"
                                          data-toggle="true"
                                          role="button"
                                          tabindex="-1"
                                          type="button"
                                        >
                                          <input
                                            aria-autocomplete="list"
                                            aria-expanded="true"
                                            autocomplete="off"
                                            class="security--filter__input-field bx--text-input"
                                            id="test-id"
                                            placeholder="placeholder"
                                            role="combobox"
                                            value=""
                                          />
                                          <span
                                            class="security--filter__search"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="security--icon security--filter__search__icon"
                                              fill="var(--icon-01, #f4f4f4)"
                                              focusable="false"
                                              height="20"
                                              preserveAspectRatio="xMidYMid meet"
                                              style="will-change: transform;"
                                              viewBox="0 0 32 32"
                                              width="20"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                              />
                                            </svg>
                                          </span>
                                        </div>
                                        <div
                                          class="security--filter__list-container"
                                          id="test-id__menu"
                                          role="listbox"
                                        >
                                          <div
                                            class="security--filter__list-item"
                                            id="downshift-0-item-0"
                                            role="button"
                                            tabindex="0"
                                          >
                                            <div
                                              class="bx--list-box__menu-item__option"
                                            >
                                              <div
                                                aria-labelledby="downshift-0-item-0"
                                                class="security--filter__list-item__entry"
                                              >
                                                X
                                                <span
                                                  class="security--filter__add"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="security--icon security--filter__add__icon"
                                                    focusable="false"
                                                    height="20"
                                                    preserveAspectRatio="xMidYMid meet"
                                                    style="will-change: transform;"
                                                    viewBox="0 0 32 32"
                                                    width="20"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                    />
                                                  </svg>
                                                </span>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                  <div
                                    aria-hidden="true"
                                    class="security--scroll-gradient__after"
                                    role="presentation"
                                  />
                                </div>
                              </section>
                              <footer
                                class="security--tearsheet--small__footer"
                              >
                                <button
                                  class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                                  tabindex="0"
                                  type="button"
                                >
                                  Cancel
                                </button>
                                <button
                                  class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                                  tabindex="0"
                                  type="button"
                                >
                                  Save
                                </button>
                              </footer>
                              <button
                                aria-label="Close"
                                class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="security--icon"
                                  focusable="false"
                                  height="20"
                                  preserveAspectRatio="xMidYMid meet"
                                  style="will-change: transform;"
                                  viewBox="0 0 32 32"
                                  width="20"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                                  />
                                </svg>
                              </button>
                            </section>
                            <div
                              class="security--portal__overlay"
                              tabindex="-1"
                            />
                            <section
                              aria-hidden="false"
                              class="security--tearsheet--small security--tearsheet--small__transition--appear"
                            >
                              <header
                                class="security--tearsheet--small__header"
                              >
                                <h1
                                  class="security--tearsheet--small__title"
                                >
                                  TagWallFilter Heading
                                </h1>
                                <div
                                  class="security--tearsheet--small__description"
                                >
                                  <div
                                    class="security--tag-wall-filter__description"
                                  >
                                    What’s the secret to minced and ground doughnut? Always use small garlic.
                                    <section
                                      aria-label=""
                                      class="security--tag-wall security--tag-wall-filter__tag-wall"
                                    >
                                      
                                      <span
                                        class="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                      >
                                        X
                                        <button
                                          aria-label=""
                                          class="security--tag--interactive__button"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="security--icon security--tag--interactive__button__icon"
                                            focusable="false"
                                            height="16"
                                            preserveAspectRatio="xMidYMid meet"
                                            style="will-change: transform;"
                                            viewBox="0 0 16 16"
                                            width="16"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                            />
                                          </svg>
                                        </button>
                                      </span>
                                    </section>
                                  </div>
                                </div>
                              </header>
                              <section
                                class="security--tearsheet--small__body"
                              >
                                <div
                                  class="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                                  role="presentation"
                                >
                                  <div
                                    aria-hidden="true"
                                    class="security--scroll-gradient__before"
                                    role="presentation"
                                  />
                                  <div
                                    class="security--scroll-gradient__content"
                                  >
                                    <div
                                      class=""
                                    >
                                      <div
                                        class="security--filter bx--list-box"
                                        id="test-id"
                                      >
                                        <div
                                          aria-controls="test-id__menu"
                                          aria-expanded="true"
                                          aria-haspopup="true"
                                          aria-label="close menu"
                                          aria-owns="test-id__menu"
                                          class="bx--list-box__field"
                                          data-toggle="true"
                                          role="button"
                                          tabindex="-1"
                                          type="button"
                                        >
                                          <input
                                            aria-autocomplete="list"
                                            aria-expanded="true"
                                            autocomplete="off"
                                            class="security--filter__input-field bx--text-input"
                                            id="test-id"
                                            placeholder=""
                                            role="combobox"
                                            value=""
                                          />
                                          <span
                                            class="security--filter__search"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="security--icon security--filter__search__icon"
                                              fill="var(--icon-01, #f4f4f4)"
                                              focusable="false"
                                              height="20"
                                              preserveAspectRatio="xMidYMid meet"
                                              style="will-change: transform;"
                                              viewBox="0 0 32 32"
                                              width="20"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                              />
                                            </svg>
                                          </span>
                                        </div>
                                        <div
                                          class="security--filter__list-container"
                                          id="test-id__menu"
                                          role="listbox"
                                        >
                                          <div
                                            class="security--filter__list-item"
                                            id="downshift-1-item-0"
                                            role="button"
                                            tabindex="0"
                                          >
                                            <div
                                              class="bx--list-box__menu-item__option"
                                            >
                                              <div
                                                aria-labelledby="downshift-1-item-0"
                                                class="security--filter__list-item__entry"
                                              >
                                                Y
                                                <span
                                                  class="security--filter__add"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="security--icon security--filter__add__icon"
                                                    focusable="false"
                                                    height="20"
                                                    preserveAspectRatio="xMidYMid meet"
                                                    style="will-change: transform;"
                                                    viewBox="0 0 32 32"
                                                    width="20"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                    />
                                                  </svg>
                                                </span>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                  <div
                                    aria-hidden="true"
                                    class="security--scroll-gradient__after"
                                    role="presentation"
                                  />
                                </div>
                              </section>
                              <footer
                                class="security--tearsheet--small__footer"
                              >
                                <button
                                  class="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                                  tabindex="0"
                                  type="button"
                                >
                                  Cancel
                                </button>
                                <button
                                  class="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                                  tabindex="0"
                                  type="button"
                                >
                                  Save
                                </button>
                              </footer>
                              <button
                                aria-label="Close"
                                class="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="security--icon"
                                  focusable="false"
                                  height="20"
                                  preserveAspectRatio="xMidYMid meet"
                                  style="will-change: transform;"
                                  viewBox="0 0 32 32"
                                  width="20"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                                  />
                                </svg>
                              </button>
                            </section>
                            <div
                              class="security--portal__overlay"
                              tabindex="-1"
                            />
                          </body>
                        }
                      >
                        <FocusTrap
                          _createFocusTrap={[Function]}
                          active={true}
                          focusTrapOptions={
                            Object {
                              "initialFocus": null,
                            }
                          }
                          paused={false}
                        >
                          <section
                            aria-hidden={false}
                            className="security--tearsheet--small"
                          >
                            <header
                              className="security--tearsheet--small__header"
                            >
                              <h1
                                className="security--tearsheet--small__title"
                              >
                                TagWallFilter Heading
                              </h1>
                              <div
                                className="security--tearsheet--small__description"
                              >
                                <div
                                  className="security--tag-wall-filter__description"
                                >
                                  What’s the secret to minced and ground doughnut? Always use small garlic.
                                  <TagWall
                                    addButtonDisabled={true}
                                    addLabel=""
                                    className="security--tag-wall-filter__tag-wall"
                                    disable={false}
                                    itemToString={[Function]}
                                    items={
                                      Array [
                                        Object {
                                          "id": "x",
                                          "label": "X",
                                        },
                                      ]
                                    }
                                    label={null}
                                    labels={Object {}}
                                    onAddButton={[Function]}
                                    onChange={[Function]}
                                  >
                                    <section
                                      aria-label=""
                                      className="security--tag-wall security--tag-wall-filter__tag-wall"
                                    >
                                      <InteractiveTag
                                        isSelected={false}
                                        key="tag__0"
                                        onRemove={[Function]}
                                        removable={true}
                                        removeBtnLabel=""
                                        type="gray"
                                      >
                                        <Tag
                                          className="security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                          filter={false}
                                          type="gray"
                                        >
                                          <span
                                            className="bx--tag bx--tag--gray security--tag--interactive security--tag--interactive--default security--tag--interactive--removable"
                                          >
                                            X
                                            <button
                                              aria-label=""
                                              className="security--tag--interactive__button"
                                              onClick={[Function]}
                                            >
                                              <Icon
                                                className="security--tag--interactive__button__icon"
                                                height={null}
                                                path={null}
                                                renderIcon={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                size={20}
                                                viewBox="0 0 32 32"
                                                width={null}
                                              >
                                                <ForwardRef(Close16)
                                                  aria-hidden="true"
                                                  className="security--icon security--tag--interactive__button__icon"
                                                  focusable={false}
                                                  preserveAspectRatio="xMidYMid meet"
                                                  style={
                                                    Object {
                                                      "willChange": "transform",
                                                    }
                                                  }
                                                >
                                                  <Icon
                                                    aria-hidden="true"
                                                    className="security--icon security--tag--interactive__button__icon"
                                                    focusable={false}
                                                    height={16}
                                                    preserveAspectRatio="xMidYMid meet"
                                                    style={
                                                      Object {
                                                        "willChange": "transform",
                                                      }
                                                    }
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="security--icon security--tag--interactive__button__icon"
                                                      focusable={false}
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      style={
                                                        Object {
                                                          "willChange": "transform",
                                                        }
                                                      }
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"
                                                      />
                                                    </svg>
                                                  </Icon>
                                                </ForwardRef(Close16)>
                                              </Icon>
                                            </button>
                                          </span>
                                        </Tag>
                                      </InteractiveTag>
                                    </section>
                                  </TagWall>
                                </div>
                              </div>
                            </header>
                            <section
                              className="security--tearsheet--small__body"
                            >
                              <ScrollGradient
                                className="security--tearsheet--small__content"
                                color="var(--ui-01, #262626)"
                                direction="Y"
                                getScrollElementRef={[Function]}
                                hideStartGradient={false}
                                onScroll={[Function]}
                              >
                                <div
                                  className="security--scroll-gradient security--scroll-gradient--none security--scroll-gradient--y security--tearsheet--small__content"
                                  role="presentation"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="security--scroll-gradient__before"
                                    role="presentation"
                                    style={
                                      Object {
                                        "backgroundImage": "linear-gradient(0deg, rgba(0,0,0,0), var(--ui-01, #262626) 90%)",
                                      }
                                    }
                                  />
                                  <div
                                    className="security--scroll-gradient__content"
                                    onScroll={[Function]}
                                  >
                                    <div
                                      className=""
                                    >
                                      <Filter
                                        className=""
                                        compareItems={[Function]}
                                        disabled={false}
                                        filterFieldClearAllTooltip="Clear all selected items"
                                        filterFieldClearSelectionTooltip="Clear selected item"
                                        filterItems={[Function]}
                                        id="test-id"
                                        initialSelectedItems={Array []}
                                        itemToString={[Function]}
                                        items={
                                          Array [
                                            Object {
                                              "id": "y",
                                              "label": "Y",
                                            },
                                          ]
                                        }
                                        locale="en"
                                        onChange={[Function]}
                                        placeholder=""
                                        selectedItems={Array []}
                                        sortItems={[Function]}
                                      >
                                        <Downshift
                                          breakingChanges={Object {}}
                                          clearSelection={[Function]}
                                          defaultHighlightedIndex={null}
                                          defaultInputValue=""
                                          defaultIsOpen={false}
                                          defaultSelectedItem={null}
                                          environment={[Window]}
                                          getA11yStatusMessage={[Function]}
                                          highlightedIndex={null}
                                          inputValue=""
                                          isOpen={true}
                                          itemToString={[Function]}
                                          onChange={[Function]}
                                          onInputValueChange={[Function]}
                                          onOuterClick={[Function]}
                                          onSelect={[Function]}
                                          onStateChange={[Function]}
                                          onUserAction={[Function]}
                                          render={[Function]}
                                          selectedItemChanged={[Function]}
                                          stateReducer={[Function]}
                                        >
                                          <ListBox
                                            className="security--filter"
                                            disabled={false}
                                            id="test-id"
                                            innerRef={[Function]}
                                            type="default"
                                          >
                                            <div
                                              className="security--filter bx--list-box"
                                              id="test-id"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                            >
                                              <ListBoxField
                                                aria-expanded={true}
                                                aria-haspopup={true}
                                                aria-label="close menu"
                                                data-toggle={true}
                                                disabled={false}
                                                id="test-id"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="button"
                                                tabIndex={-1}
                                                type="button"
                                              >
                                                <div
                                                  aria-controls="test-id__menu"
                                                  aria-expanded={true}
                                                  aria-haspopup={true}
                                                  aria-label="close menu"
                                                  aria-owns="test-id__menu"
                                                  className="bx--list-box__field"
                                                  data-toggle={true}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                  tabIndex={-1}
                                                  type="button"
                                                >
                                                  <input
                                                    aria-activedescendant={null}
                                                    aria-autocomplete="list"
                                                    aria-expanded={true}
                                                    autoComplete="off"
                                                    className="security--filter__input-field bx--text-input"
                                                    disabled={false}
                                                    id="test-id"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder=""
                                                    role="combobox"
                                                    value=""
                                                  />
                                                  <span
                                                    className="security--filter__search"
                                                  >
                                                    <Icon
                                                      className="security--filter__search__icon"
                                                      fill="var(--icon-01, #f4f4f4)"
                                                      height={null}
                                                      path={null}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size={20}
                                                      viewBox="0 0 32 32"
                                                      width={null}
                                                    >
                                                      <ForwardRef(Search20)
                                                        aria-hidden="true"
                                                        className="security--icon security--filter__search__icon"
                                                        fill="var(--icon-01, #f4f4f4)"
                                                        focusable={false}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        style={
                                                          Object {
                                                            "willChange": "transform",
                                                          }
                                                        }
                                                      >
                                                        <Icon
                                                          aria-hidden="true"
                                                          className="security--icon security--filter__search__icon"
                                                          fill="var(--icon-01, #f4f4f4)"
                                                          focusable={false}
                                                          height={20}
                                                          preserveAspectRatio="xMidYMid meet"
                                                          style={
                                                            Object {
                                                              "willChange": "transform",
                                                            }
                                                          }
                                                          viewBox="0 0 32 32"
                                                          width={20}
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="security--icon security--filter__search__icon"
                                                            fill="var(--icon-01, #f4f4f4)"
                                                            focusable={false}
                                                            height={20}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            style={
                                                              Object {
                                                                "willChange": "transform",
                                                              }
                                                            }
                                                            viewBox="0 0 32 32"
                                                            width={20}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
                                                            />
                                                          </svg>
                                                        </Icon>
                                                      </ForwardRef(Search20)>
                                                    </Icon>
                                                  </span>
                                                </div>
                                              </ListBoxField>
                                              <ListBoxMenu
                                                className="security--filter__list-container"
                                                id="test-id"
                                              >
                                                <div
                                                  className="security--filter__list-container"
                                                  id="test-id__menu"
                                                  role="listbox"
                                                >
                                                  <ListBoxMenuItem
                                                    className="security--filter__list-item"
                                                    id="downshift-1-item-0"
                                                    isActive={false}
                                                    isHighlighted={false}
                                                    key="downshift-1-item-0"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseMove={[Function]}
                                                    role="button"
                                                    tabIndex="0"
                                                  >
                                                    <div
                                                      className="security--filter__list-item"
                                                      id="downshift-1-item-0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseMove={[Function]}
                                                      role="button"
                                                      tabIndex="0"
                                                    >
                                                      <div
                                                        className="bx--list-box__menu-item__option"
                                                      >
                                                        <div
                                                          aria-labelledby="downshift-1-item-0"
                                                          className="security--filter__list-item__entry"
                                                        >
                                                          Y
                                                          <span
                                                            className="security--filter__add"
                                                          >
                                                            <Icon
                                                              className="security--filter__add__icon"
                                                              height={null}
                                                              path={null}
                                                              renderIcon={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              size={20}
                                                              viewBox="0 0 32 32"
                                                              width={null}
                                                            >
                                                              <ForwardRef(Add20)
                                                                aria-hidden="true"
                                                                className="security--icon security--filter__add__icon"
                                                                focusable={false}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                style={
                                                                  Object {
                                                                    "willChange": "transform",
                                                                  }
                                                                }
                                                              >
                                                                <Icon
                                                                  aria-hidden="true"
                                                                  className="security--icon security--filter__add__icon"
                                                                  focusable={false}
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  style={
                                                                    Object {
                                                                      "willChange": "transform",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="security--icon security--filter__add__icon"
                                                                    focusable={false}
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    style={
                                                                      Object {
                                                                        "willChange": "transform",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(Add20)>
                                                            </Icon>
                                                          </span>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </ListBoxMenuItem>
                                                </div>
                                              </ListBoxMenu>
                                            </div>
                                          </ListBox>
                                        </Downshift>
                                      </Filter>
                                    </div>
                                  </div>
                                  <div
                                    aria-hidden={true}
                                    className="security--scroll-gradient__after"
                                    role="presentation"
                                    style={
                                      Object {
                                        "backgroundImage": "linear-gradient(0deg, var(--ui-01, #262626) 10%, rgba(0,0,0,0))",
                                      }
                                    }
                                  />
                                </div>
                              </ScrollGradient>
                            </section>
                            <footer
                              className="security--tearsheet--small__footer"
                            >
                              <Button
                                className="security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary"
                                disabled={false}
                                kind="secondary"
                                largeText={null}
                                loading={false}
                                onClick={[MockFunction]}
                                size="large"
                                tabIndex={0}
                                type="button"
                              >
                                <ForwardRef(Button)
                                  className="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large"
                                  disabled={false}
                                  kind="secondary"
                                  onClick={[MockFunction]}
                                  size={null}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="security--button security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary security--button--large bx--btn bx--btn--secondary"
                                    disabled={false}
                                    onClick={[MockFunction]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    Cancel
                                  </button>
                                </ForwardRef(Button)>
                              </Button>
                              <Button
                                className="security--tearsheet--small__footer__button"
                                disabled={false}
                                kind="primary"
                                largeText={null}
                                loading={false}
                                onClick={[MockFunction]}
                                size="large"
                                tabIndex={0}
                                type="button"
                              >
                                <ForwardRef(Button)
                                  className="security--button security--tearsheet--small__footer__button security--button--large"
                                  disabled={false}
                                  kind="primary"
                                  onClick={[MockFunction]}
                                  size={null}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="security--button security--tearsheet--small__footer__button security--button--large bx--btn bx--btn--primary"
                                    disabled={false}
                                    onClick={[MockFunction]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    Save
                                  </button>
                                </ForwardRef(Button)>
                              </Button>
                            </footer>
                            <IconButton
                              className="security--tearsheet--small__button--close"
                              iconClassName=""
                              iconSize={20}
                              label="Close"
                              onClick={[MockFunction]}
                              path={null}
                              renderIcon={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                }
                              }
                              size="lg"
                              state={false}
                              tooltip={false}
                              tooltipDirection="bottom"
                            >
                              <button
                                aria-label="Close"
                                className="security--button--icon security--tearsheet--small__button--close security--button--icon--lg"
                                onClick={[MockFunction]}
                              >
                                <Icon
                                  className=""
                                  height={null}
                                  path={null}
                                  renderIcon={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    }
                                  }
                                  size={20}
                                  viewBox="0 0 32 32"
                                  width={null}
                                >
                                  <ForwardRef(Close20)
                                    aria-hidden="true"
                                    className="security--icon"
                                    focusable={false}
                                    preserveAspectRatio="xMidYMid meet"
                                    style={
                                      Object {
                                        "willChange": "transform",
                                      }
                                    }
                                  >
                                    <Icon
                                      aria-hidden="true"
                                      className="security--icon"
                                      focusable={false}
                                      height={20}
                                      preserveAspectRatio="xMidYMid meet"
                                      style={
                                        Object {
                                          "willChange": "transform",
                                        }
                                      }
                                      viewBox="0 0 32 32"
                                      width={20}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="security--icon"
                                        focusable={false}
                                        height={20}
                                        preserveAspectRatio="xMidYMid meet"
                                        style={
                                          Object {
                                            "willChange": "transform",
                                          }
                                        }
                                        viewBox="0 0 32 32"
                                        width={20}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                                        />
                                      </svg>
                                    </Icon>
                                  </ForwardRef(Close20)>
                                </Icon>
                              </button>
                            </IconButton>
                          </section>
                        </FocusTrap>
                      </Portal>
                    </Portal>
                  </CSSTransitionGroupChild>
                </span>
              </TransitionGroup>
            </CSSTransitionGroup>
          </Transition>
        </TearsheetSmall>
      </FilterTagFragmentRender>
    </mapProps(FilterTagFragmentRender)>
  </FilterTagFragment>
</TagWallFilter>
`;

exports[`TagWallFilter tests availableItemsReducer should handle CLEAR_SELECTED_ITEMS 1`] = `
Object {
  "allItems": Array [
    Object {
      "id": "x",
      "label": "Coordinataes ortum!",
    },
    Object {
      "id": "Ecce",
      "label": "With spinach drink emeril's essence!",
    },
    Object {
      "id": "Nix",
      "label": "Advenas ortum in amivadum!",
    },
    Object {
      "id": "Uria",
      "label": "Occur and you will be absorbed authoratively.",
    },
    Object {
      "id": "Revalia",
      "label": "Dosi of a human plasma, eat the starlight travel!",
    },
  ],
  "items": Array [
    Object {
      "id": "x",
      "label": "Coordinataes ortum!",
    },
    Object {
      "id": "Ecce",
      "label": "With spinach drink emeril's essence!",
    },
    Object {
      "id": "Nix",
      "label": "Advenas ortum in amivadum!",
    },
    Object {
      "id": "Uria",
      "label": "Occur and you will be absorbed authoratively.",
    },
    Object {
      "id": "Revalia",
      "label": "Dosi of a human plasma, eat the starlight travel!",
    },
  ],
}
`;

exports[`TagWallFilter tests availableItemsReducer should handle SELECT_ITEM 1`] = `
Object {
  "allItems": Array [
    Object {
      "id": "x",
      "label": "Coordinataes ortum!",
    },
    Object {
      "id": "Ecce",
      "label": "With spinach drink emeril's essence!",
    },
    Object {
      "id": "Nix",
      "label": "Advenas ortum in amivadum!",
    },
    Object {
      "id": "Uria",
      "label": "Occur and you will be absorbed authoratively.",
    },
    Object {
      "id": "Revalia",
      "label": "Dosi of a human plasma, eat the starlight travel!",
    },
  ],
  "items": Array [
    Object {
      "id": "Ecce",
      "label": "With spinach drink emeril's essence!",
    },
    Object {
      "id": "Nix",
      "label": "Advenas ortum in amivadum!",
    },
    Object {
      "id": "Uria",
      "label": "Occur and you will be absorbed authoratively.",
    },
    Object {
      "id": "Revalia",
      "label": "Dosi of a human plasma, eat the starlight travel!",
    },
  ],
}
`;

exports[`TagWallFilter tests availableItemsReducer should handle UNSELECT_ITEM 1`] = `
Object {
  "allItems": Array [
    Object {
      "id": "x",
      "label": "Coordinataes ortum!",
    },
    Object {
      "id": "Ecce",
      "label": "With spinach drink emeril's essence!",
    },
    Object {
      "id": "Nix",
      "label": "Advenas ortum in amivadum!",
    },
    Object {
      "id": "Uria",
      "label": "Occur and you will be absorbed authoratively.",
    },
    Object {
      "id": "Revalia",
      "label": "Dosi of a human plasma, eat the starlight travel!",
    },
  ],
  "items": Array [
    Object {
      "id": "Ecce",
      "label": "The son robs with grace.",
    },
    Object {
      "id": "Nix",
      "label": "Advenas ortum in amivadum!",
    },
    Object {
      "id": "Uria",
      "label": "Occur and you will be absorbed authoratively.",
    },
  ],
}
`;

exports[`TagWallFilter tests selectedItemsReducer should handle CLEAR_SELECTED_ITEMS 1`] = `
Object {
  "items": Array [],
}
`;

exports[`TagWallFilter tests selectedItemsReducer should handle SELECT_ITEM 1`] = `
Object {
  "items": Array [
    Object {
      "id": "x",
      "isSelected": true,
      "label": "hallo",
    },
  ],
}
`;

exports[`TagWallFilter tests selectedItemsReducer should handle SELECT_ITEM 2`] = `
Object {
  "items": Array [
    Object {
      "id": "y",
      "isSelected": true,
      "label": "!!!",
    },
    Object {
      "id": "x",
      "isSelected": true,
      "label": "hallo",
    },
  ],
}
`;

exports[`TagWallFilter tests selectedItemsReducer should handle UNSELECT_ITEM 1`] = `
Object {
  "items": Array [
    Object {
      "id": "z",
      "isSelected": true,
      "label": "???",
    },
    Object {
      "id": "x",
      "isSelected": true,
      "label": "hallo",
    },
  ],
}
`;
