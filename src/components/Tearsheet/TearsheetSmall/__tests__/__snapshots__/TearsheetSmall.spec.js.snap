// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TearsheetSmall renders 1`] = `
<Transition
  className="security--tearsheet--small"
  component="span"
  timeout={300}
>
  <Portal
    focusTrap={true}
    focusTrapOptions={Object {}}
    hasOverlay={true}
    initialFocus={null}
    overlayOptions={Object {}}
    rootNode={<body />}
    stopPropagation={false}
  >
    <section
      aria-hidden={false}
      className="security--tearsheet--small"
    >
      <header
        className="security--tearsheet--small__header"
      >
        <h1
          className="security--tearsheet--small__title"
        >
          Title
        </h1>
        <div
          className="security--tearsheet--small__description"
        >
          Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.
        </div>
      </header>
      <section
        className="security--tearsheet--small__body"
      >
        <ScrollGradient
          className="security--tearsheet--small__content"
          color="var(--cds-ui-01, #262626)"
          direction="Y"
          getScrollElementRef={[Function]}
          hideStartGradient={false}
          onScroll={[Function]}
        >
          <div
            className="security--tearsheet--small__scroll-gradient__content"
          />
        </ScrollGradient>
      </section>
      <footer
        className="security--tearsheet--small__footer"
      >
        <Button
          className="security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary"
          dangerDescription="danger"
          disabled={false}
          kind="secondary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Cancel
        </Button>
        <Button
          className="security--tearsheet--small__footer__button"
          dangerDescription="danger"
          disabled={false}
          kind="primary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Action
        </Button>
      </footer>
      <IconButton
        className="security--tearsheet--small__button--close"
        disabled={false}
        iconClassName=""
        iconSize={20}
        label="Close"
        onClick={[Function]}
        path={null}
        renderIcon={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="lg"
        state={false}
        tooltip={false}
        tooltipDirection="bottom"
      />
    </section>
  </Portal>
</Transition>
`;

exports[`TearsheetSmall renders disabled buttons 1`] = `
<Transition
  className="security--tearsheet--small"
  component="span"
  timeout={300}
>
  <Portal
    focusTrap={true}
    focusTrapOptions={Object {}}
    hasOverlay={true}
    initialFocus={null}
    overlayOptions={Object {}}
    rootNode={<body />}
    stopPropagation={false}
  >
    <section
      aria-hidden={false}
      className="security--tearsheet--small"
    >
      <header
        className="security--tearsheet--small__header"
      >
        <h1
          className="security--tearsheet--small__title"
        >
          Title
        </h1>
        <div
          className="security--tearsheet--small__description"
        >
          Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.
        </div>
      </header>
      <section
        className="security--tearsheet--small__body"
      >
        <ScrollGradient
          className="security--tearsheet--small__content"
          color="var(--cds-ui-01, #262626)"
          direction="Y"
          getScrollElementRef={[Function]}
          hideStartGradient={false}
          onScroll={[Function]}
        >
          <div
            className="security--tearsheet--small__scroll-gradient__content"
          />
        </ScrollGradient>
      </section>
      <footer
        className="security--tearsheet--small__footer"
      >
        <Button
          className="security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary"
          dangerDescription="danger"
          disabled={true}
          kind="secondary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Cancel
        </Button>
        <Button
          className="security--tearsheet--small__footer__button"
          dangerDescription="danger"
          disabled={true}
          kind="primary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Action
        </Button>
      </footer>
    </section>
  </Portal>
</Transition>
`;

exports[`TearsheetSmall renders loading state 1`] = `
<Transition
  className="security--tearsheet--small"
  component="span"
  timeout={300}
>
  <Portal
    focusTrap={true}
    focusTrapOptions={Object {}}
    hasOverlay={true}
    initialFocus={null}
    overlayOptions={Object {}}
    rootNode={<body />}
    stopPropagation={false}
  >
    <section
      aria-hidden={false}
      className="security--tearsheet--small"
    >
      <LoadingMessage
        active={true}
        className="security--tearsheet--small__loading"
        small={false}
        withOverlay={true}
      >
        loading
      </LoadingMessage>
      <header
        className="security--tearsheet--small__header"
      >
        <h1
          className="security--tearsheet--small__title"
        >
          Title
        </h1>
        <div
          className="security--tearsheet--small__description"
        >
          Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.
        </div>
      </header>
      <section
        className="security--tearsheet--small__body"
      >
        <ScrollGradient
          className="security--tearsheet--small__content"
          color="var(--cds-ui-01, #262626)"
          direction="Y"
          getScrollElementRef={[Function]}
          hideStartGradient={false}
          onScroll={[Function]}
        >
          <div
            className="security--tearsheet--small__scroll-gradient__content"
          />
        </ScrollGradient>
      </section>
      <footer
        className="security--tearsheet--small__footer"
      >
        <Button
          className="security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary"
          dangerDescription="danger"
          disabled={true}
          kind="secondary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Cancel
        </Button>
        <Button
          className="security--tearsheet--small__footer__button"
          dangerDescription="danger"
          disabled={true}
          kind="primary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Action
        </Button>
      </footer>
      <IconButton
        className="security--tearsheet--small__button--close"
        disabled={true}
        iconClassName=""
        iconSize={20}
        label="Close"
        onClick={[Function]}
        path={null}
        renderIcon={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="lg"
        state={false}
        tooltip={false}
        tooltipDirection="bottom"
      />
    </section>
  </Portal>
</Transition>
`;

exports[`TearsheetSmall should override \`labels\` if button label property provided 1`] = `
<Transition
  className="security--tearsheet--small"
  component="span"
  timeout={300}
>
  <Portal
    focusTrap={true}
    focusTrapOptions={Object {}}
    hasOverlay={true}
    initialFocus={null}
    overlayOptions={Object {}}
    rootNode={<body />}
    stopPropagation={false}
  >
    <section
      aria-hidden={false}
      className="security--tearsheet--small"
    >
      <header
        className="security--tearsheet--small__header"
      >
        <h1
          className="security--tearsheet--small__title"
        >
          Title
        </h1>
        <div
          className="security--tearsheet--small__description"
        >
          Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.
        </div>
      </header>
      <section
        className="security--tearsheet--small__body"
      >
        <ScrollGradient
          className="security--tearsheet--small__content"
          color="var(--cds-ui-01, #262626)"
          direction="Y"
          getScrollElementRef={[Function]}
          hideStartGradient={false}
          onScroll={[Function]}
        >
          <div
            className="security--tearsheet--small__scroll-gradient__content"
          />
        </ScrollGradient>
      </section>
      <footer
        className="security--tearsheet--small__footer"
      >
        <Button
          className="security--tearsheet--small__footer__button security--tearsheet--small__footer__button--secondary"
          dangerDescription="danger"
          disabled={false}
          kind="secondary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Secondary - prop
        </Button>
        <Button
          className="security--tearsheet--small__footer__button"
          dangerDescription="danger"
          disabled={false}
          kind="primary"
          largeText={null}
          loading={false}
          onClick={[Function]}
          size="xl"
          tabIndex={0}
          tooltipAlignment="center"
          tooltipPosition="top"
          type="button"
        >
          Primary - prop
        </Button>
      </footer>
      <IconButton
        className="security--tearsheet--small__button--close"
        disabled={false}
        iconClassName=""
        iconSize={20}
        label="Close - prop"
        onClick={[Function]}
        path={null}
        renderIcon={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="lg"
        state={false}
        tooltip={false}
        tooltipDirection="bottom"
      />
    </section>
  </Portal>
</Transition>
`;
