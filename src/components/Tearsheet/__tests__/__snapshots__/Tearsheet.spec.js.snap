// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tearsheet should override \`labels\` if button label property provided 1`] = `
<Transition
  className="security--tearsheet"
  component="span"
  timeout={300}
>
  <Portal
    focusTrap={true}
    focusTrapOptions={Object {}}
    hasOverlay={true}
    initialFocus="[tearsheet-primary-focus]"
    overlayOptions={Object {}}
    rootNode={<body />}
    stopPropagation={false}
  >
    <section
      aria-hidden={false}
      className="security--tearsheet"
    >
      <section
        aria-hidden={false}
        className="security--tearsheet__sidebar"
      >
        <h1
          className="security--tearsheet__sidebar__title"
        >
          Title of setup
        </h1>
        <p
          className="security--tearsheet__sidebar__subtitle"
        >
          5 mins setup
        </p>
        <div
          className="security--tearsheet__sidebar__content"
        >
          <div
            style={
              Object {
                "background": "black",
                "color": "white",
                "height": "100%",
                "position": "relative",
                "width": "100%",
              }
            }
          >
            Sidebar
          </div>
        </div>
        <footer
          className="security--tearsheet__sidebar__footer"
        >
          <Button
            disabled={false}
            iconDescription="Delete - prop"
            kind="ghost-danger"
            largeText={null}
            loading={false}
            onClick={[MockFunction]}
            renderIcon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              }
            }
            size="default"
            tabIndex={0}
            tooltipAlignment="center"
            tooltipPosition="top"
            type="button"
          >
            Delete - prop
          </Button>
        </footer>
      </section>
      <section
        aria-hidden={false}
        className="security--tearsheet__main"
      >
        <IconButton
          className="security--tearsheet__button--close"
          disabled={false}
          iconClassName=""
          iconSize={20}
          label="Close - prop"
          onClick={[MockFunction]}
          path={null}
          renderIcon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          size="lg"
          state={false}
          tooltip={false}
          tooltipDirection="bottom"
        />
        <h1
          className="security--tearsheet__main__title"
        >
          Step title
        </h1>
        <section
          className="security--tearsheet__main__content"
        >
          <ScrollGradient
            className="security--tearsheet__main__scroll-gradient"
            color="var(--ui-01, #262626)"
            direction="Y"
            getScrollElementRef={[Function]}
            hideStartGradient={false}
            onScroll={[Function]}
          >
            <div
              className="security--tearsheet__main__scroll-gradient__content"
            >
              <div
                style={
                  Object {
                    "background": "black",
                    "color": "white",
                    "height": "100%",
                    "position": "relative",
                    "width": "100%",
                  }
                }
              >
                Main Section
              </div>
            </div>
          </ScrollGradient>
        </section>
        <div
          className="security--tearsheet__container"
        >
          <div
            className="security--tearsheet__container__end"
          >
            <Button
              className="security--tearsheet__button security--tearsheet__button--secondary"
              disabled={false}
              kind="secondary"
              largeText={null}
              loading={false}
              onClick={[MockFunction]}
              size="xl"
              tabIndex={0}
              tooltipAlignment="center"
              tooltipPosition="top"
              type="button"
            >
              Previous - prop
            </Button>
            <Button
              className="security--tearsheet__button"
              disabled={false}
              kind="primary"
              largeText={null}
              loading={false}
              onClick={[MockFunction]}
              size="xl"
              tabIndex={0}
              tooltipAlignment="center"
              tooltipPosition="top"
              type="button"
            >
              Next - prop
            </Button>
          </div>
        </div>
      </section>
    </section>
  </Portal>
</Transition>
`;

exports[`Tearsheet should render the Tearsheet 1`] = `
<Transition
  className="security--tearsheet"
  component="span"
  timeout={300}
>
  <Portal
    focusTrap={true}
    focusTrapOptions={Object {}}
    hasOverlay={true}
    initialFocus="[tearsheet-primary-focus]"
    overlayOptions={Object {}}
    rootNode={<body />}
    stopPropagation={false}
  >
    <section
      aria-hidden={false}
      className="security--tearsheet"
    >
      <section
        aria-hidden={false}
        className="security--tearsheet__sidebar"
      >
        <h1
          className="security--tearsheet__sidebar__title"
        >
          Title of setup
        </h1>
        <p
          className="security--tearsheet__sidebar__subtitle"
        >
          5 mins setup
        </p>
        <div
          className="security--tearsheet__sidebar__content"
        >
          <div
            style={
              Object {
                "background": "black",
                "color": "white",
                "height": "100%",
                "position": "relative",
                "width": "100%",
              }
            }
          >
            Sidebar
          </div>
        </div>
        <footer
          className="security--tearsheet__sidebar__footer"
        >
          <Button
            disabled={false}
            iconDescription="Delete"
            kind="ghost-danger"
            largeText={null}
            loading={false}
            onClick={[MockFunction]}
            renderIcon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              }
            }
            size="default"
            tabIndex={0}
            tooltipAlignment="center"
            tooltipPosition="top"
            type="button"
          >
            Delete
          </Button>
        </footer>
      </section>
      <section
        aria-hidden={false}
        className="security--tearsheet__main"
      >
        <IconButton
          className="security--tearsheet__button--close"
          disabled={false}
          iconClassName=""
          iconSize={20}
          label="Close"
          onClick={[MockFunction]}
          path={null}
          renderIcon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          size="lg"
          state={false}
          tooltip={false}
          tooltipDirection="bottom"
        />
        <h1
          className="security--tearsheet__main__title"
        >
          Step title
        </h1>
        <section
          className="security--tearsheet__main__content"
        >
          <ScrollGradient
            className="security--tearsheet__main__scroll-gradient"
            color="var(--ui-01, #262626)"
            direction="Y"
            getScrollElementRef={[Function]}
            hideStartGradient={false}
            onScroll={[Function]}
          >
            <div
              className="security--tearsheet__main__scroll-gradient__content"
            >
              <div
                style={
                  Object {
                    "background": "black",
                    "color": "white",
                    "height": "100%",
                    "position": "relative",
                    "width": "100%",
                  }
                }
              >
                Main Section
              </div>
            </div>
          </ScrollGradient>
        </section>
        <div
          className="security--tearsheet__container"
        >
          <div
            className="security--tearsheet__container__end"
          >
            <Button
              className="security--tearsheet__button security--tearsheet__button--secondary"
              disabled={false}
              kind="secondary"
              largeText={null}
              loading={false}
              onClick={[MockFunction]}
              size="xl"
              tabIndex={0}
              tooltipAlignment="center"
              tooltipPosition="top"
              type="button"
            >
              Previous
            </Button>
            <Button
              className="security--tearsheet__button"
              disabled={false}
              kind="primary"
              largeText={null}
              loading={false}
              onClick={[MockFunction]}
              size="xl"
              tabIndex={0}
              tooltipAlignment="center"
              tooltipPosition="top"
              type="button"
            >
              Next
            </Button>
          </div>
        </div>
      </section>
    </section>
  </Portal>
</Transition>
`;
